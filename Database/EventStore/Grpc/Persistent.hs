{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Persistent where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
       (serverLoop)
import qualified Shared
 
data PersistentSubscriptions request
     response = PersistentSubscriptions{persistentSubscriptionsCreate ::
                                        request 'HsGRPC.Normal Persistent.CreateReq
                                          Persistent.CreateResp
                                          -> Hs.IO (response 'HsGRPC.Normal Persistent.CreateResp),
                                        persistentSubscriptionsUpdate ::
                                        request 'HsGRPC.Normal Persistent.UpdateReq
                                          Persistent.UpdateResp
                                          -> Hs.IO (response 'HsGRPC.Normal Persistent.UpdateResp),
                                        persistentSubscriptionsDelete ::
                                        request 'HsGRPC.Normal Persistent.DeleteReq
                                          Persistent.DeleteResp
                                          -> Hs.IO (response 'HsGRPC.Normal Persistent.DeleteResp),
                                        persistentSubscriptionsRead ::
                                        request 'HsGRPC.BiDiStreaming Persistent.ReadReq
                                          Persistent.ReadResp
                                          ->
                                          Hs.IO
                                            (response 'HsGRPC.BiDiStreaming Persistent.ReadResp)}
              deriving Hs.Generic
 
persistentSubscriptionsServer ::
                                PersistentSubscriptions HsGRPC.ServerRequest HsGRPC.ServerResponse
                                  -> HsGRPC.ServiceOptions -> Hs.IO ()
persistentSubscriptionsServer
  PersistentSubscriptions{persistentSubscriptionsCreate =
                            persistentSubscriptionsCreate,
                          persistentSubscriptionsUpdate = persistentSubscriptionsUpdate,
                          persistentSubscriptionsDelete = persistentSubscriptionsDelete,
                          persistentSubscriptionsRead = persistentSubscriptionsRead}
  (ServiceOptions serverHost serverPort useCompression
     userAgentPrefix userAgentSuffix initialMetadata sslConfig logger)
  = (HsGRPC.serverLoop
       HsGRPC.defaultOptions{HsGRPC.optNormalHandlers =
                               [(HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/event_store.client.persistent_subscriptions.PersistentSubscriptions/Create")
                                   (HsGRPC.convertGeneratedServerHandler
                                      persistentSubscriptionsCreate)),
                                (HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/event_store.client.persistent_subscriptions.PersistentSubscriptions/Update")
                                   (HsGRPC.convertGeneratedServerHandler
                                      persistentSubscriptionsUpdate)),
                                (HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/event_store.client.persistent_subscriptions.PersistentSubscriptions/Delete")
                                   (HsGRPC.convertGeneratedServerHandler
                                      persistentSubscriptionsDelete))],
                             HsGRPC.optClientStreamHandlers = [],
                             HsGRPC.optServerStreamHandlers = [],
                             HsGRPC.optBiDiStreamHandlers =
                               [(HsGRPC.BiDiStreamHandler
                                   (HsGRPC.MethodName
                                      "/event_store.client.persistent_subscriptions.PersistentSubscriptions/Read")
                                   (HsGRPC.convertGeneratedServerRWHandler
                                      persistentSubscriptionsRead))],
                             optServerHost = serverHost, optServerPort = serverPort,
                             optUseCompression = useCompression,
                             optUserAgentPrefix = userAgentPrefix,
                             optUserAgentSuffix = userAgentSuffix,
                             optInitialMetadata = initialMetadata, optSSLConfig = sslConfig,
                             optLogger = logger})
 
persistentSubscriptionsClient ::
                                HsGRPC.Client ->
                                  Hs.IO
                                    (PersistentSubscriptions HsGRPC.ClientRequest
                                       HsGRPC.ClientResult)
persistentSubscriptionsClient client
  = (Hs.pure PersistentSubscriptions) <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/event_store.client.persistent_subscriptions.PersistentSubscriptions/Create")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/event_store.client.persistent_subscriptions.PersistentSubscriptions/Update")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/event_store.client.persistent_subscriptions.PersistentSubscriptions/Delete")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/event_store.client.persistent_subscriptions.PersistentSubscriptions/Read")))
 
newtype ReadReq = ReadReq{readReqContent ::
                          Hs.Maybe ReadReqContent}
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadReq where
        nameOf _ = (Hs.fromString "ReadReq")
 
instance HsProtobuf.HasDefault ReadReq
 
instance HsProtobuf.Message ReadReq where
        encodeMessage _ ReadReq{readReqContent = readReqContent}
          = (Hs.mconcat
               [case readReqContent of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             ReadReqContentOptions y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                                     (Hs.coerce @(Hs.Maybe Persistent.ReadReq_Options)
                                        @(HsProtobuf.Nested Persistent.ReadReq_Options)
                                        (Hs.Just y)))
                             ReadReqContentAck y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                                     (Hs.coerce @(Hs.Maybe Persistent.ReadReq_Ack)
                                        @(HsProtobuf.Nested Persistent.ReadReq_Ack)
                                        (Hs.Just y)))
                             ReadReqContentNack y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                                     (Hs.coerce @(Hs.Maybe Persistent.ReadReq_Nack)
                                        @(HsProtobuf.Nested Persistent.ReadReq_Nack)
                                        (Hs.Just y)))])
        decodeMessage _
          = (Hs.pure ReadReq) <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 1),
                   (Hs.pure (Hs.fmap ReadReqContentOptions)) <*>
                     (Hs.coerce @(_ (HsProtobuf.Nested Persistent.ReadReq_Options))
                        @(_ (Hs.Maybe Persistent.ReadReq_Options))
                        HsProtobuf.decodeMessageField)),
                  ((HsProtobuf.FieldNumber 2),
                   (Hs.pure (Hs.fmap ReadReqContentAck)) <*>
                     (Hs.coerce @(_ (HsProtobuf.Nested Persistent.ReadReq_Ack))
                        @(_ (Hs.Maybe Persistent.ReadReq_Ack))
                        HsProtobuf.decodeMessageField)),
                  ((HsProtobuf.FieldNumber 3),
                   (Hs.pure (Hs.fmap ReadReqContentNack)) <*>
                     (Hs.coerce @(_ (HsProtobuf.Nested Persistent.ReadReq_Nack))
                        @(_ (Hs.Maybe Persistent.ReadReq_Nack))
                        HsProtobuf.decodeMessageField))])
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB ReadReq where
        toJSONPB (ReadReq f1_or_f2_or_f3)
          = (HsJSONPB.object
               [(let encodeContent
                       = (case f1_or_f2_or_f3 of
                              Hs.Just (ReadReqContentOptions f1) -> (HsJSONPB.pair "options" f1)
                              Hs.Just (ReadReqContentAck f2) -> (HsJSONPB.pair "ack" f2)
                              Hs.Just (ReadReqContentNack f3) -> (HsJSONPB.pair "nack" f3)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("content" .= (HsJSONPB.objectOrNull [encodeContent] options))
                         options
                       else encodeContent options)])
        toEncodingPB (ReadReq f1_or_f2_or_f3)
          = (HsJSONPB.pairs
               [(let encodeContent
                       = (case f1_or_f2_or_f3 of
                              Hs.Just (ReadReqContentOptions f1) -> (HsJSONPB.pair "options" f1)
                              Hs.Just (ReadReqContentAck f2) -> (HsJSONPB.pair "ack" f2)
                              Hs.Just (ReadReqContentNack f3) -> (HsJSONPB.pair "nack" f3)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("content" .= (HsJSONPB.pairsOrNull [encodeContent] options))
                         options
                       else encodeContent options)])
 
instance HsJSONPB.FromJSONPB ReadReq where
        parseJSONPB
          = (HsJSONPB.withObject "ReadReq"
               (\ obj ->
                  (Hs.pure ReadReq) <*>
                    (let parseContent parseObj
                           = Hs.msum
                               [Hs.Just Hs.. ReadReqContentOptions <$>
                                  (HsJSONPB.parseField parseObj "options"),
                                Hs.Just Hs.. ReadReqContentAck <$>
                                  (HsJSONPB.parseField parseObj "ack"),
                                Hs.Just Hs.. ReadReqContentNack <$>
                                  (HsJSONPB.parseField parseObj "nack"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "content") Hs.>>=
                          (HsJSONPB.withObject "content" parseContent))
                         <|> (parseContent obj))))
 
instance HsJSONPB.ToJSON ReadReq where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadReq where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadReq where
        declareNamedSchema _
          = do let declare_content = HsJSONPB.declareSchemaRef
               readReqContent <- declare_content Proxy.Proxy
               let _ = Hs.pure ReadReq <*> HsJSONPB.asProxy declare_content
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadReq",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("content", readReqContent)]}})
 
data ReadReq_Options = ReadReq_Options{readReq_OptionsStreamIdentifier
                                       :: Hs.Maybe Shared.StreamIdentifier,
                                       readReq_OptionsGroupName :: Hs.Text,
                                       readReq_OptionsBufferSize :: Hs.Int32,
                                       readReq_OptionsUuidOption ::
                                       Hs.Maybe Persistent.Options_UUIDOption}
                     deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadReq_Options where
        nameOf _ = (Hs.fromString "ReadReq_Options")
 
instance HsProtobuf.HasDefault ReadReq_Options
 
instance HsProtobuf.Message ReadReq_Options where
        encodeMessage _
          ReadReq_Options{readReq_OptionsStreamIdentifier =
                            readReq_OptionsStreamIdentifier,
                          readReq_OptionsGroupName = readReq_OptionsGroupName,
                          readReq_OptionsBufferSize = readReq_OptionsBufferSize,
                          readReq_OptionsUuidOption = readReq_OptionsUuidOption}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Shared.StreamIdentifier)
                      @(HsProtobuf.Nested Shared.StreamIdentifier)
                      readReq_OptionsStreamIdentifier)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   readReq_OptionsGroupName),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   readReq_OptionsBufferSize),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Maybe Persistent.Options_UUIDOption)
                      @(HsProtobuf.Nested Persistent.Options_UUIDOption)
                      readReq_OptionsUuidOption))])
        decodeMessage _
          = (Hs.pure ReadReq_Options) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Shared.StreamIdentifier))
                 @(_ (Hs.Maybe Shared.StreamIdentifier))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Persistent.Options_UUIDOption))
                 @(_ (Hs.Maybe Persistent.Options_UUIDOption))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path
                            ("event_store" Hs.:| ["client", "shared", "StreamIdentifier"])))))
                (HsProtobuf.Single "stream_identifier")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "group_name")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "buffer_size")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "UUIDOption")))
                (HsProtobuf.Single "uuid_option")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ReadReq_Options where
        toJSONPB (ReadReq_Options f1 f2 f3 f4)
          = (HsJSONPB.object
               ["stream_identifier" .= f1, "group_name" .= f2,
                "buffer_size" .= f3, "uuid_option" .= f4])
        toEncodingPB (ReadReq_Options f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["stream_identifier" .= f1, "group_name" .= f2,
                "buffer_size" .= f3, "uuid_option" .= f4])
 
instance HsJSONPB.FromJSONPB ReadReq_Options where
        parseJSONPB
          = (HsJSONPB.withObject "ReadReq_Options"
               (\ obj ->
                  (Hs.pure ReadReq_Options) <*> obj .: "stream_identifier" <*>
                    obj .: "group_name"
                    <*> obj .: "buffer_size"
                    <*> obj .: "uuid_option"))
 
instance HsJSONPB.ToJSON ReadReq_Options where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadReq_Options where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadReq_Options where
        declareNamedSchema _
          = do let declare_stream_identifier = HsJSONPB.declareSchemaRef
               readReq_OptionsStreamIdentifier <- declare_stream_identifier
                                                    Proxy.Proxy
               let declare_group_name = HsJSONPB.declareSchemaRef
               readReq_OptionsGroupName <- declare_group_name Proxy.Proxy
               let declare_buffer_size = HsJSONPB.declareSchemaRef
               readReq_OptionsBufferSize <- declare_buffer_size Proxy.Proxy
               let declare_uuid_option = HsJSONPB.declareSchemaRef
               readReq_OptionsUuidOption <- declare_uuid_option Proxy.Proxy
               let _ = Hs.pure ReadReq_Options <*>
                         HsJSONPB.asProxy declare_stream_identifier
                         <*> HsJSONPB.asProxy declare_group_name
                         <*> HsJSONPB.asProxy declare_buffer_size
                         <*> HsJSONPB.asProxy declare_uuid_option
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadReq_Options",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("stream_identifier",
                                                         readReq_OptionsStreamIdentifier),
                                                        ("group_name", readReq_OptionsGroupName),
                                                        ("buffer_size", readReq_OptionsBufferSize),
                                                        ("uuid_option",
                                                         readReq_OptionsUuidOption)]}})
 
newtype ReadReq_Options_UUIDOption = ReadReq_Options_UUIDOption{readReq_Options_UUIDOptionContent
                                                                ::
                                                                Hs.Maybe
                                                                  ReadReq_Options_UUIDOptionContent}
                                     deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadReq_Options_UUIDOption where
        nameOf _ = (Hs.fromString "ReadReq_Options_UUIDOption")
 
instance HsProtobuf.HasDefault ReadReq_Options_UUIDOption
 
instance HsProtobuf.Message ReadReq_Options_UUIDOption where
        encodeMessage _
          ReadReq_Options_UUIDOption{readReq_Options_UUIDOptionContent =
                                       readReq_Options_UUIDOptionContent}
          = (Hs.mconcat
               [case readReq_Options_UUIDOptionContent of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             ReadReq_Options_UUIDOptionContentStructured y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                                     (Hs.coerce @(Hs.Maybe Shared.Empty)
                                        @(HsProtobuf.Nested Shared.Empty)
                                        (Hs.Just y)))
                             ReadReq_Options_UUIDOptionContentString y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                                     (Hs.coerce @(Hs.Maybe Shared.Empty)
                                        @(HsProtobuf.Nested Shared.Empty)
                                        (Hs.Just y)))])
        decodeMessage _
          = (Hs.pure ReadReq_Options_UUIDOption) <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 1),
                   (Hs.pure (Hs.fmap ReadReq_Options_UUIDOptionContentStructured)) <*>
                     (Hs.coerce @(_ (HsProtobuf.Nested Shared.Empty))
                        @(_ (Hs.Maybe Shared.Empty))
                        HsProtobuf.decodeMessageField)),
                  ((HsProtobuf.FieldNumber 2),
                   (Hs.pure (Hs.fmap ReadReq_Options_UUIDOptionContentString)) <*>
                     (Hs.coerce @(_ (HsProtobuf.Nested Shared.Empty))
                        @(_ (Hs.Maybe Shared.Empty))
                        HsProtobuf.decodeMessageField))])
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB ReadReq_Options_UUIDOption where
        toJSONPB (ReadReq_Options_UUIDOption f1_or_f2)
          = (HsJSONPB.object
               [(let encodeContent
                       = (case f1_or_f2 of
                              Hs.Just (ReadReq_Options_UUIDOptionContentStructured f1)
                                -> (HsJSONPB.pair "structured" f1)
                              Hs.Just (ReadReq_Options_UUIDOptionContentString f2)
                                -> (HsJSONPB.pair "string" f2)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("content" .= (HsJSONPB.objectOrNull [encodeContent] options))
                         options
                       else encodeContent options)])
        toEncodingPB (ReadReq_Options_UUIDOption f1_or_f2)
          = (HsJSONPB.pairs
               [(let encodeContent
                       = (case f1_or_f2 of
                              Hs.Just (ReadReq_Options_UUIDOptionContentStructured f1)
                                -> (HsJSONPB.pair "structured" f1)
                              Hs.Just (ReadReq_Options_UUIDOptionContentString f2)
                                -> (HsJSONPB.pair "string" f2)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("content" .= (HsJSONPB.pairsOrNull [encodeContent] options))
                         options
                       else encodeContent options)])
 
instance HsJSONPB.FromJSONPB ReadReq_Options_UUIDOption where
        parseJSONPB
          = (HsJSONPB.withObject "ReadReq_Options_UUIDOption"
               (\ obj ->
                  (Hs.pure ReadReq_Options_UUIDOption) <*>
                    (let parseContent parseObj
                           = Hs.msum
                               [Hs.Just Hs.. ReadReq_Options_UUIDOptionContentStructured <$>
                                  (HsJSONPB.parseField parseObj "structured"),
                                Hs.Just Hs.. ReadReq_Options_UUIDOptionContentString <$>
                                  (HsJSONPB.parseField parseObj "string"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "content") Hs.>>=
                          (HsJSONPB.withObject "content" parseContent))
                         <|> (parseContent obj))))
 
instance HsJSONPB.ToJSON ReadReq_Options_UUIDOption where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadReq_Options_UUIDOption where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadReq_Options_UUIDOption where
        declareNamedSchema _
          = do let declare_content = HsJSONPB.declareSchemaRef
               readReq_Options_UUIDOptionContent <- declare_content Proxy.Proxy
               let _ = Hs.pure ReadReq_Options_UUIDOption <*>
                         HsJSONPB.asProxy declare_content
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadReq_Options_UUIDOption",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("content",
                                                         readReq_Options_UUIDOptionContent)]}})
 
data ReadReq_Options_UUIDOptionContent = ReadReq_Options_UUIDOptionContentStructured Shared.Empty
                                       | ReadReq_Options_UUIDOptionContentString Shared.Empty
                                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadReq_Options_UUIDOptionContent where
        nameOf _ = (Hs.fromString "ReadReq_Options_UUIDOptionContent")
 
instance HsJSONPB.ToSchema ReadReq_Options_UUIDOptionContent where
        declareNamedSchema _
          = do let declare_structured = HsJSONPB.declareSchemaRef
               readReq_Options_UUIDOptionContentStructured <- declare_structured
                                                                Proxy.Proxy
               let _ = Hs.pure ReadReq_Options_UUIDOptionContentStructured <*>
                         HsJSONPB.asProxy declare_structured
               let declare_string = HsJSONPB.declareSchemaRef
               readReq_Options_UUIDOptionContentString <- declare_string
                                                            Proxy.Proxy
               let _ = Hs.pure ReadReq_Options_UUIDOptionContentString <*>
                         HsJSONPB.asProxy declare_string
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadReq_Options_UUIDOptionContent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("structured",
                                                         readReq_Options_UUIDOptionContentStructured),
                                                        ("string",
                                                         readReq_Options_UUIDOptionContentString)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data ReadReq_Ack = ReadReq_Ack{readReq_AckId :: Hs.ByteString,
                               readReq_AckIds :: Hs.Vector Shared.UUID}
                 deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadReq_Ack where
        nameOf _ = (Hs.fromString "ReadReq_Ack")
 
instance HsProtobuf.HasDefault ReadReq_Ack
 
instance HsProtobuf.Message ReadReq_Ack where
        encodeMessage _
          ReadReq_Ack{readReq_AckId = readReq_AckId,
                      readReq_AckIds = readReq_AckIds}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   readReq_AckId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Vector Shared.UUID)
                      @(HsProtobuf.NestedVec Shared.UUID)
                      readReq_AckIds))])
        decodeMessage _
          = (Hs.pure ReadReq_Ack) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (Hs.coerce @(_ (HsProtobuf.NestedVec Shared.UUID))
                 @(_ (Hs.Vector Shared.UUID))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Bytes)
                (HsProtobuf.Single "id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Repeated
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path
                            ("event_store" Hs.:| ["client", "shared", "UUID"])))))
                (HsProtobuf.Single "ids")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ReadReq_Ack where
        toJSONPB (ReadReq_Ack f1 f2)
          = (HsJSONPB.object ["id" .= f1, "ids" .= f2])
        toEncodingPB (ReadReq_Ack f1 f2)
          = (HsJSONPB.pairs ["id" .= f1, "ids" .= f2])
 
instance HsJSONPB.FromJSONPB ReadReq_Ack where
        parseJSONPB
          = (HsJSONPB.withObject "ReadReq_Ack"
               (\ obj -> (Hs.pure ReadReq_Ack) <*> obj .: "id" <*> obj .: "ids"))
 
instance HsJSONPB.ToJSON ReadReq_Ack where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadReq_Ack where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadReq_Ack where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               readReq_AckId <- declare_id Proxy.Proxy
               let declare_ids = HsJSONPB.declareSchemaRef
               readReq_AckIds <- declare_ids Proxy.Proxy
               let _ = Hs.pure ReadReq_Ack <*> HsJSONPB.asProxy declare_id <*>
                         HsJSONPB.asProxy declare_ids
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadReq_Ack",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", readReq_AckId),
                                                        ("ids", readReq_AckIds)]}})
 
data ReadReq_Nack = ReadReq_Nack{readReq_NackId :: Hs.ByteString,
                                 readReq_NackIds :: Hs.Vector Shared.UUID,
                                 readReq_NackAction :: HsProtobuf.Enumerated Persistent.Nack_Action,
                                 readReq_NackReason :: Hs.Text}
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadReq_Nack where
        nameOf _ = (Hs.fromString "ReadReq_Nack")
 
instance HsProtobuf.HasDefault ReadReq_Nack
 
instance HsProtobuf.Message ReadReq_Nack where
        encodeMessage _
          ReadReq_Nack{readReq_NackId = readReq_NackId,
                       readReq_NackIds = readReq_NackIds,
                       readReq_NackAction = readReq_NackAction,
                       readReq_NackReason = readReq_NackReason}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   readReq_NackId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Vector Shared.UUID)
                      @(HsProtobuf.NestedVec Shared.UUID)
                      readReq_NackIds)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   readReq_NackAction),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   readReq_NackReason)])
        decodeMessage _
          = (Hs.pure ReadReq_Nack) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (Hs.coerce @(_ (HsProtobuf.NestedVec Shared.UUID))
                 @(_ (Hs.Vector Shared.UUID))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Bytes)
                (HsProtobuf.Single "id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Repeated
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path
                            ("event_store" Hs.:| ["client", "shared", "UUID"])))))
                (HsProtobuf.Single "ids")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Action")))
                (HsProtobuf.Single "action")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "reason")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ReadReq_Nack where
        toJSONPB (ReadReq_Nack f1 f2 f3 f4)
          = (HsJSONPB.object
               ["id" .= f1, "ids" .= f2, "action" .= f3, "reason" .= f4])
        toEncodingPB (ReadReq_Nack f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["id" .= f1, "ids" .= f2, "action" .= f3, "reason" .= f4])
 
instance HsJSONPB.FromJSONPB ReadReq_Nack where
        parseJSONPB
          = (HsJSONPB.withObject "ReadReq_Nack"
               (\ obj ->
                  (Hs.pure ReadReq_Nack) <*> obj .: "id" <*> obj .: "ids" <*>
                    obj .: "action"
                    <*> obj .: "reason"))
 
instance HsJSONPB.ToJSON ReadReq_Nack where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadReq_Nack where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadReq_Nack where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               readReq_NackId <- declare_id Proxy.Proxy
               let declare_ids = HsJSONPB.declareSchemaRef
               readReq_NackIds <- declare_ids Proxy.Proxy
               let declare_action = HsJSONPB.declareSchemaRef
               readReq_NackAction <- declare_action Proxy.Proxy
               let declare_reason = HsJSONPB.declareSchemaRef
               readReq_NackReason <- declare_reason Proxy.Proxy
               let _ = Hs.pure ReadReq_Nack <*> HsJSONPB.asProxy declare_id <*>
                         HsJSONPB.asProxy declare_ids
                         <*> HsJSONPB.asProxy declare_action
                         <*> HsJSONPB.asProxy declare_reason
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadReq_Nack",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", readReq_NackId),
                                                        ("ids", readReq_NackIds),
                                                        ("action", readReq_NackAction),
                                                        ("reason", readReq_NackReason)]}})
 
data ReadReq_Nack_Action = ReadReq_Nack_ActionUnknown
                         | ReadReq_Nack_ActionPark
                         | ReadReq_Nack_ActionRetry
                         | ReadReq_Nack_ActionSkip
                         | ReadReq_Nack_ActionStop
                         deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadReq_Nack_Action where
        nameOf _ = (Hs.fromString "ReadReq_Nack_Action")
 
instance HsProtobuf.HasDefault ReadReq_Nack_Action
 
instance Hs.Bounded ReadReq_Nack_Action where
        minBound = ReadReq_Nack_ActionUnknown
        maxBound = ReadReq_Nack_ActionStop
 
instance Hs.Ord ReadReq_Nack_Action where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum ReadReq_Nack_Action where
        toProtoEnumMay 0 = Hs.Just ReadReq_Nack_ActionUnknown
        toProtoEnumMay 1 = Hs.Just ReadReq_Nack_ActionPark
        toProtoEnumMay 2 = Hs.Just ReadReq_Nack_ActionRetry
        toProtoEnumMay 3 = Hs.Just ReadReq_Nack_ActionSkip
        toProtoEnumMay 4 = Hs.Just ReadReq_Nack_ActionStop
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (ReadReq_Nack_ActionUnknown) = 0
        fromProtoEnum (ReadReq_Nack_ActionPark) = 1
        fromProtoEnum (ReadReq_Nack_ActionRetry) = 2
        fromProtoEnum (ReadReq_Nack_ActionSkip) = 3
        fromProtoEnum (ReadReq_Nack_ActionStop) = 4
 
instance HsJSONPB.ToJSONPB ReadReq_Nack_Action where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB ReadReq_Nack_Action where
        parseJSONPB (HsJSONPB.String "Unknown")
          = Hs.pure ReadReq_Nack_ActionUnknown
        parseJSONPB (HsJSONPB.String "Park")
          = Hs.pure ReadReq_Nack_ActionPark
        parseJSONPB (HsJSONPB.String "Retry")
          = Hs.pure ReadReq_Nack_ActionRetry
        parseJSONPB (HsJSONPB.String "Skip")
          = Hs.pure ReadReq_Nack_ActionSkip
        parseJSONPB (HsJSONPB.String "Stop")
          = Hs.pure ReadReq_Nack_ActionStop
        parseJSONPB v = (HsJSONPB.typeMismatch "ReadReq_Nack_Action" v)
 
instance HsJSONPB.ToJSON ReadReq_Nack_Action where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadReq_Nack_Action where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite ReadReq_Nack_Action
 
data ReadReqContent = ReadReqContentOptions Persistent.ReadReq_Options
                    | ReadReqContentAck Persistent.ReadReq_Ack
                    | ReadReqContentNack Persistent.ReadReq_Nack
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadReqContent where
        nameOf _ = (Hs.fromString "ReadReqContent")
 
instance HsJSONPB.ToSchema ReadReqContent where
        declareNamedSchema _
          = do let declare_options = HsJSONPB.declareSchemaRef
               readReqContentOptions <- declare_options Proxy.Proxy
               let _ = Hs.pure ReadReqContentOptions <*>
                         HsJSONPB.asProxy declare_options
               let declare_ack = HsJSONPB.declareSchemaRef
               readReqContentAck <- declare_ack Proxy.Proxy
               let _ = Hs.pure ReadReqContentAck <*> HsJSONPB.asProxy declare_ack
               let declare_nack = HsJSONPB.declareSchemaRef
               readReqContentNack <- declare_nack Proxy.Proxy
               let _ = Hs.pure ReadReqContentNack <*>
                         HsJSONPB.asProxy declare_nack
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadReqContent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("options", readReqContentOptions),
                                                        ("ack", readReqContentAck),
                                                        ("nack", readReqContentNack)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
newtype ReadResp = ReadResp{readRespContent ::
                            Hs.Maybe ReadRespContent}
                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadResp where
        nameOf _ = (Hs.fromString "ReadResp")
 
instance HsProtobuf.HasDefault ReadResp
 
instance HsProtobuf.Message ReadResp where
        encodeMessage _ ReadResp{readRespContent = readRespContent}
          = (Hs.mconcat
               [case readRespContent of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             ReadRespContentEvent y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                                     (Hs.coerce @(Hs.Maybe Persistent.ReadResp_ReadEvent)
                                        @(HsProtobuf.Nested Persistent.ReadResp_ReadEvent)
                                        (Hs.Just y)))
                             ReadRespContentSubscriptionConfirmation y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                                     (Hs.coerce
                                        @(Hs.Maybe Persistent.ReadResp_SubscriptionConfirmation)
                                        @(HsProtobuf.Nested Persistent.ReadResp_SubscriptionConfirmation)
                                        (Hs.Just y)))])
        decodeMessage _
          = (Hs.pure ReadResp) <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 1),
                   (Hs.pure (Hs.fmap ReadRespContentEvent)) <*>
                     (Hs.coerce @(_ (HsProtobuf.Nested Persistent.ReadResp_ReadEvent))
                        @(_ (Hs.Maybe Persistent.ReadResp_ReadEvent))
                        HsProtobuf.decodeMessageField)),
                  ((HsProtobuf.FieldNumber 2),
                   (Hs.pure (Hs.fmap ReadRespContentSubscriptionConfirmation)) <*>
                     (Hs.coerce
                        @(_ (HsProtobuf.Nested Persistent.ReadResp_SubscriptionConfirmation))
                        @(_ (Hs.Maybe Persistent.ReadResp_SubscriptionConfirmation))
                        HsProtobuf.decodeMessageField))])
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB ReadResp where
        toJSONPB (ReadResp f1_or_f2)
          = (HsJSONPB.object
               [(let encodeContent
                       = (case f1_or_f2 of
                              Hs.Just (ReadRespContentEvent f1) -> (HsJSONPB.pair "event" f1)
                              Hs.Just (ReadRespContentSubscriptionConfirmation f2)
                                -> (HsJSONPB.pair "subscription_confirmation" f2)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("content" .= (HsJSONPB.objectOrNull [encodeContent] options))
                         options
                       else encodeContent options)])
        toEncodingPB (ReadResp f1_or_f2)
          = (HsJSONPB.pairs
               [(let encodeContent
                       = (case f1_or_f2 of
                              Hs.Just (ReadRespContentEvent f1) -> (HsJSONPB.pair "event" f1)
                              Hs.Just (ReadRespContentSubscriptionConfirmation f2)
                                -> (HsJSONPB.pair "subscription_confirmation" f2)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("content" .= (HsJSONPB.pairsOrNull [encodeContent] options))
                         options
                       else encodeContent options)])
 
instance HsJSONPB.FromJSONPB ReadResp where
        parseJSONPB
          = (HsJSONPB.withObject "ReadResp"
               (\ obj ->
                  (Hs.pure ReadResp) <*>
                    (let parseContent parseObj
                           = Hs.msum
                               [Hs.Just Hs.. ReadRespContentEvent <$>
                                  (HsJSONPB.parseField parseObj "event"),
                                Hs.Just Hs.. ReadRespContentSubscriptionConfirmation <$>
                                  (HsJSONPB.parseField parseObj "subscription_confirmation"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "content") Hs.>>=
                          (HsJSONPB.withObject "content" parseContent))
                         <|> (parseContent obj))))
 
instance HsJSONPB.ToJSON ReadResp where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadResp where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadResp where
        declareNamedSchema _
          = do let declare_content = HsJSONPB.declareSchemaRef
               readRespContent <- declare_content Proxy.Proxy
               let _ = Hs.pure ReadResp <*> HsJSONPB.asProxy declare_content
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadResp",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("content", readRespContent)]}})
 
data ReadResp_ReadEvent = ReadResp_ReadEvent{readResp_ReadEventEvent
                                             :: Hs.Maybe Persistent.ReadEvent_RecordedEvent,
                                             readResp_ReadEventLink ::
                                             Hs.Maybe Persistent.ReadEvent_RecordedEvent,
                                             readResp_ReadEventPosition ::
                                             Hs.Maybe ReadResp_ReadEventPosition,
                                             readResp_ReadEventCount ::
                                             Hs.Maybe ReadResp_ReadEventCount}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadResp_ReadEvent where
        nameOf _ = (Hs.fromString "ReadResp_ReadEvent")
 
instance HsProtobuf.HasDefault ReadResp_ReadEvent
 
instance HsProtobuf.Message ReadResp_ReadEvent where
        encodeMessage _
          ReadResp_ReadEvent{readResp_ReadEventEvent =
                               readResp_ReadEventEvent,
                             readResp_ReadEventLink = readResp_ReadEventLink,
                             readResp_ReadEventPosition = readResp_ReadEventPosition,
                             readResp_ReadEventCount = readResp_ReadEventCount}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Persistent.ReadEvent_RecordedEvent)
                      @(HsProtobuf.Nested Persistent.ReadEvent_RecordedEvent)
                      readResp_ReadEventEvent)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Maybe Persistent.ReadEvent_RecordedEvent)
                      @(HsProtobuf.Nested Persistent.ReadEvent_RecordedEvent)
                      readResp_ReadEventLink)),
                case readResp_ReadEventPosition of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             ReadResp_ReadEventPositionCommitPosition y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                                     (HsProtobuf.ForceEmit y))
                             ReadResp_ReadEventPositionNoPosition y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                                     (Hs.coerce @(Hs.Maybe Shared.Empty)
                                        @(HsProtobuf.Nested Shared.Empty)
                                        (Hs.Just y))),
                case readResp_ReadEventCount of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             ReadResp_ReadEventCountRetryCount y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                                     (HsProtobuf.ForceEmit y))
                             ReadResp_ReadEventCountNoRetryCount y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                                     (Hs.coerce @(Hs.Maybe Shared.Empty)
                                        @(HsProtobuf.Nested Shared.Empty)
                                        (Hs.Just y)))])
        decodeMessage _
          = (Hs.pure ReadResp_ReadEvent) <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Persistent.ReadEvent_RecordedEvent))
                 @(_ (Hs.Maybe Persistent.ReadEvent_RecordedEvent))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Persistent.ReadEvent_RecordedEvent))
                 @(_ (Hs.Maybe Persistent.ReadEvent_RecordedEvent))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 3),
                   (Hs.pure (Hs.Just Hs.. ReadResp_ReadEventPositionCommitPosition))
                     <*> HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 4),
                   (Hs.pure (Hs.fmap ReadResp_ReadEventPositionNoPosition)) <*>
                     (Hs.coerce @(_ (HsProtobuf.Nested Shared.Empty))
                        @(_ (Hs.Maybe Shared.Empty))
                        HsProtobuf.decodeMessageField))])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 5),
                   (Hs.pure (Hs.Just Hs.. ReadResp_ReadEventCountRetryCount)) <*>
                     HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 6),
                   (Hs.pure (Hs.fmap ReadResp_ReadEventCountNoRetryCount)) <*>
                     (Hs.coerce @(_ (HsProtobuf.Nested Shared.Empty))
                        @(_ (Hs.Maybe Shared.Empty))
                        HsProtobuf.decodeMessageField))])
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "RecordedEvent")))
                (HsProtobuf.Single "event")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "RecordedEvent")))
                (HsProtobuf.Single "link")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ReadResp_ReadEvent where
        toJSONPB (ReadResp_ReadEvent f1 f2 f3_or_f4 f5_or_f6)
          = (HsJSONPB.object
               ["event" .= f1, "link" .= f2,
                (let encodePosition
                       = (case f3_or_f4 of
                              Hs.Just (ReadResp_ReadEventPositionCommitPosition f3)
                                -> (HsJSONPB.pair "commit_position" f3)
                              Hs.Just (ReadResp_ReadEventPositionNoPosition f4)
                                -> (HsJSONPB.pair "no_position" f4)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("position" .= (HsJSONPB.objectOrNull [encodePosition] options))
                         options
                       else encodePosition options),
                (let encodeCount
                       = (case f5_or_f6 of
                              Hs.Just (ReadResp_ReadEventCountRetryCount f5)
                                -> (HsJSONPB.pair "retry_count" f5)
                              Hs.Just (ReadResp_ReadEventCountNoRetryCount f6)
                                -> (HsJSONPB.pair "no_retry_count" f6)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("count" .= (HsJSONPB.objectOrNull [encodeCount] options)) options
                       else encodeCount options)])
        toEncodingPB (ReadResp_ReadEvent f1 f2 f3_or_f4 f5_or_f6)
          = (HsJSONPB.pairs
               ["event" .= f1, "link" .= f2,
                (let encodePosition
                       = (case f3_or_f4 of
                              Hs.Just (ReadResp_ReadEventPositionCommitPosition f3)
                                -> (HsJSONPB.pair "commit_position" f3)
                              Hs.Just (ReadResp_ReadEventPositionNoPosition f4)
                                -> (HsJSONPB.pair "no_position" f4)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("position" .= (HsJSONPB.pairsOrNull [encodePosition] options))
                         options
                       else encodePosition options),
                (let encodeCount
                       = (case f5_or_f6 of
                              Hs.Just (ReadResp_ReadEventCountRetryCount f5)
                                -> (HsJSONPB.pair "retry_count" f5)
                              Hs.Just (ReadResp_ReadEventCountNoRetryCount f6)
                                -> (HsJSONPB.pair "no_retry_count" f6)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("count" .= (HsJSONPB.pairsOrNull [encodeCount] options)) options
                       else encodeCount options)])
 
instance HsJSONPB.FromJSONPB ReadResp_ReadEvent where
        parseJSONPB
          = (HsJSONPB.withObject "ReadResp_ReadEvent"
               (\ obj ->
                  (Hs.pure ReadResp_ReadEvent) <*> obj .: "event" <*> obj .: "link"
                    <*>
                    (let parsePosition parseObj
                           = Hs.msum
                               [Hs.Just Hs.. ReadResp_ReadEventPositionCommitPosition <$>
                                  (HsJSONPB.parseField parseObj "commit_position"),
                                Hs.Just Hs.. ReadResp_ReadEventPositionNoPosition <$>
                                  (HsJSONPB.parseField parseObj "no_position"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "position") Hs.>>=
                          (HsJSONPB.withObject "position" parsePosition))
                         <|> (parsePosition obj))
                    <*>
                    (let parseCount parseObj
                           = Hs.msum
                               [Hs.Just Hs.. ReadResp_ReadEventCountRetryCount <$>
                                  (HsJSONPB.parseField parseObj "retry_count"),
                                Hs.Just Hs.. ReadResp_ReadEventCountNoRetryCount <$>
                                  (HsJSONPB.parseField parseObj "no_retry_count"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "count") Hs.>>= (HsJSONPB.withObject "count" parseCount))
                         <|> (parseCount obj))))
 
instance HsJSONPB.ToJSON ReadResp_ReadEvent where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadResp_ReadEvent where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadResp_ReadEvent where
        declareNamedSchema _
          = do let declare_event = HsJSONPB.declareSchemaRef
               readResp_ReadEventEvent <- declare_event Proxy.Proxy
               let declare_link = HsJSONPB.declareSchemaRef
               readResp_ReadEventLink <- declare_link Proxy.Proxy
               let declare_position = HsJSONPB.declareSchemaRef
               readResp_ReadEventPosition <- declare_position Proxy.Proxy
               let declare_count = HsJSONPB.declareSchemaRef
               readResp_ReadEventCount <- declare_count Proxy.Proxy
               let _ = Hs.pure ReadResp_ReadEvent <*>
                         HsJSONPB.asProxy declare_event
                         <*> HsJSONPB.asProxy declare_link
                         <*> HsJSONPB.asProxy declare_position
                         <*> HsJSONPB.asProxy declare_count
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadResp_ReadEvent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("event", readResp_ReadEventEvent),
                                                        ("link", readResp_ReadEventLink),
                                                        ("position", readResp_ReadEventPosition),
                                                        ("count", readResp_ReadEventCount)]}})
 
data ReadResp_ReadEvent_RecordedEvent = ReadResp_ReadEvent_RecordedEvent{readResp_ReadEvent_RecordedEventId
                                                                         :: Hs.Maybe Shared.UUID,
                                                                         readResp_ReadEvent_RecordedEventStreamIdentifier
                                                                         ::
                                                                         Hs.Maybe
                                                                           Shared.StreamIdentifier,
                                                                         readResp_ReadEvent_RecordedEventStreamRevision
                                                                         :: Hs.Word64,
                                                                         readResp_ReadEvent_RecordedEventPreparePosition
                                                                         :: Hs.Word64,
                                                                         readResp_ReadEvent_RecordedEventCommitPosition
                                                                         :: Hs.Word64,
                                                                         readResp_ReadEvent_RecordedEventMetadata
                                                                         :: Hs.Map Hs.Text Hs.Text,
                                                                         readResp_ReadEvent_RecordedEventCustomMetadata
                                                                         :: Hs.ByteString,
                                                                         readResp_ReadEvent_RecordedEventData
                                                                         :: Hs.ByteString}
                                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadResp_ReadEvent_RecordedEvent where
        nameOf _ = (Hs.fromString "ReadResp_ReadEvent_RecordedEvent")
 
instance HsProtobuf.HasDefault ReadResp_ReadEvent_RecordedEvent
 
instance HsProtobuf.Message ReadResp_ReadEvent_RecordedEvent where
        encodeMessage _
          ReadResp_ReadEvent_RecordedEvent{readResp_ReadEvent_RecordedEventId
                                             = readResp_ReadEvent_RecordedEventId,
                                           readResp_ReadEvent_RecordedEventStreamIdentifier =
                                             readResp_ReadEvent_RecordedEventStreamIdentifier,
                                           readResp_ReadEvent_RecordedEventStreamRevision =
                                             readResp_ReadEvent_RecordedEventStreamRevision,
                                           readResp_ReadEvent_RecordedEventPreparePosition =
                                             readResp_ReadEvent_RecordedEventPreparePosition,
                                           readResp_ReadEvent_RecordedEventCommitPosition =
                                             readResp_ReadEvent_RecordedEventCommitPosition,
                                           readResp_ReadEvent_RecordedEventMetadata =
                                             readResp_ReadEvent_RecordedEventMetadata,
                                           readResp_ReadEvent_RecordedEventCustomMetadata =
                                             readResp_ReadEvent_RecordedEventCustomMetadata,
                                           readResp_ReadEvent_RecordedEventData =
                                             readResp_ReadEvent_RecordedEventData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Shared.UUID) @(HsProtobuf.Nested Shared.UUID)
                      readResp_ReadEvent_RecordedEventId)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Maybe Shared.StreamIdentifier)
                      @(HsProtobuf.Nested Shared.StreamIdentifier)
                      readResp_ReadEvent_RecordedEventStreamIdentifier)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   readResp_ReadEvent_RecordedEventStreamRevision),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   readResp_ReadEvent_RecordedEventPreparePosition),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   readResp_ReadEvent_RecordedEventCommitPosition),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   readResp_ReadEvent_RecordedEventMetadata),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   readResp_ReadEvent_RecordedEventCustomMetadata),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   readResp_ReadEvent_RecordedEventData)])
        decodeMessage _
          = (Hs.pure ReadResp_ReadEvent_RecordedEvent) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Shared.UUID))
                 @(_ (Hs.Maybe Shared.UUID))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Shared.StreamIdentifier))
                 @(_ (Hs.Maybe Shared.StreamIdentifier))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 5))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 6))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 7))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 8))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path
                            ("event_store" Hs.:| ["client", "shared", "UUID"])))))
                (HsProtobuf.Single "id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path
                            ("event_store" Hs.:| ["client", "shared", "StreamIdentifier"])))))
                (HsProtobuf.Single "stream_identifier")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.UInt64)
                (HsProtobuf.Single "stream_revision")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim HsProtobuf.UInt64)
                (HsProtobuf.Single "prepare_position")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim HsProtobuf.UInt64)
                (HsProtobuf.Single "commit_position")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobuf.Map HsProtobuf.String HsProtobuf.String)
                (HsProtobuf.Single "metadata")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Prim HsProtobuf.Bytes)
                (HsProtobuf.Single "custom_metadata")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobuf.Prim HsProtobuf.Bytes)
                (HsProtobuf.Single "data")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ReadResp_ReadEvent_RecordedEvent where
        toJSONPB (ReadResp_ReadEvent_RecordedEvent f1 f2 f3 f4 f5 f6 f7 f8)
          = (HsJSONPB.object
               ["id" .= f1, "stream_identifier" .= f2, "stream_revision" .= f3,
                "prepare_position" .= f4, "commit_position" .= f5,
                "metadata" .= f6, "custom_metadata" .= f7, "data" .= f8])
        toEncodingPB
          (ReadResp_ReadEvent_RecordedEvent f1 f2 f3 f4 f5 f6 f7 f8)
          = (HsJSONPB.pairs
               ["id" .= f1, "stream_identifier" .= f2, "stream_revision" .= f3,
                "prepare_position" .= f4, "commit_position" .= f5,
                "metadata" .= f6, "custom_metadata" .= f7, "data" .= f8])
 
instance HsJSONPB.FromJSONPB ReadResp_ReadEvent_RecordedEvent where
        parseJSONPB
          = (HsJSONPB.withObject "ReadResp_ReadEvent_RecordedEvent"
               (\ obj ->
                  (Hs.pure ReadResp_ReadEvent_RecordedEvent) <*> obj .: "id" <*>
                    obj .: "stream_identifier"
                    <*> obj .: "stream_revision"
                    <*> obj .: "prepare_position"
                    <*> obj .: "commit_position"
                    <*> obj .: "metadata"
                    <*> obj .: "custom_metadata"
                    <*> obj .: "data"))
 
instance HsJSONPB.ToJSON ReadResp_ReadEvent_RecordedEvent where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadResp_ReadEvent_RecordedEvent where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadResp_ReadEvent_RecordedEvent where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               readResp_ReadEvent_RecordedEventId <- declare_id Proxy.Proxy
               let declare_stream_identifier = HsJSONPB.declareSchemaRef
               readResp_ReadEvent_RecordedEventStreamIdentifier <- declare_stream_identifier
                                                                     Proxy.Proxy
               let declare_stream_revision = HsJSONPB.declareSchemaRef
               readResp_ReadEvent_RecordedEventStreamRevision <- declare_stream_revision
                                                                   Proxy.Proxy
               let declare_prepare_position = HsJSONPB.declareSchemaRef
               readResp_ReadEvent_RecordedEventPreparePosition <- declare_prepare_position
                                                                    Proxy.Proxy
               let declare_commit_position = HsJSONPB.declareSchemaRef
               readResp_ReadEvent_RecordedEventCommitPosition <- declare_commit_position
                                                                   Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               readResp_ReadEvent_RecordedEventMetadata <- declare_metadata
                                                             Proxy.Proxy
               let declare_custom_metadata = HsJSONPB.declareSchemaRef
               readResp_ReadEvent_RecordedEventCustomMetadata <- declare_custom_metadata
                                                                   Proxy.Proxy
               let declare_data = HsJSONPB.declareSchemaRef
               readResp_ReadEvent_RecordedEventData <- declare_data Proxy.Proxy
               let _ = Hs.pure ReadResp_ReadEvent_RecordedEvent <*>
                         HsJSONPB.asProxy declare_id
                         <*> HsJSONPB.asProxy declare_stream_identifier
                         <*> HsJSONPB.asProxy declare_stream_revision
                         <*> HsJSONPB.asProxy declare_prepare_position
                         <*> HsJSONPB.asProxy declare_commit_position
                         <*> HsJSONPB.asProxy declare_metadata
                         <*> HsJSONPB.asProxy declare_custom_metadata
                         <*> HsJSONPB.asProxy declare_data
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadResp_ReadEvent_RecordedEvent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", readResp_ReadEvent_RecordedEventId),
                                                        ("stream_identifier",
                                                         readResp_ReadEvent_RecordedEventStreamIdentifier),
                                                        ("stream_revision",
                                                         readResp_ReadEvent_RecordedEventStreamRevision),
                                                        ("prepare_position",
                                                         readResp_ReadEvent_RecordedEventPreparePosition),
                                                        ("commit_position",
                                                         readResp_ReadEvent_RecordedEventCommitPosition),
                                                        ("metadata",
                                                         readResp_ReadEvent_RecordedEventMetadata),
                                                        ("custom_metadata",
                                                         readResp_ReadEvent_RecordedEventCustomMetadata),
                                                        ("data",
                                                         readResp_ReadEvent_RecordedEventData)]}})
 
data ReadResp_ReadEventPosition = ReadResp_ReadEventPositionCommitPosition Hs.Word64
                                | ReadResp_ReadEventPositionNoPosition Shared.Empty
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadResp_ReadEventPosition where
        nameOf _ = (Hs.fromString "ReadResp_ReadEventPosition")
 
instance HsJSONPB.ToSchema ReadResp_ReadEventPosition where
        declareNamedSchema _
          = do let declare_commit_position = HsJSONPB.declareSchemaRef
               readResp_ReadEventPositionCommitPosition <- declare_commit_position
                                                             Proxy.Proxy
               let _ = Hs.pure ReadResp_ReadEventPositionCommitPosition <*>
                         HsJSONPB.asProxy declare_commit_position
               let declare_no_position = HsJSONPB.declareSchemaRef
               readResp_ReadEventPositionNoPosition <- declare_no_position
                                                         Proxy.Proxy
               let _ = Hs.pure ReadResp_ReadEventPositionNoPosition <*>
                         HsJSONPB.asProxy declare_no_position
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadResp_ReadEventPosition",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("commit_position",
                                                         readResp_ReadEventPositionCommitPosition),
                                                        ("no_position",
                                                         readResp_ReadEventPositionNoPosition)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data ReadResp_ReadEventCount = ReadResp_ReadEventCountRetryCount Hs.Int32
                             | ReadResp_ReadEventCountNoRetryCount Shared.Empty
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadResp_ReadEventCount where
        nameOf _ = (Hs.fromString "ReadResp_ReadEventCount")
 
instance HsJSONPB.ToSchema ReadResp_ReadEventCount where
        declareNamedSchema _
          = do let declare_retry_count = HsJSONPB.declareSchemaRef
               readResp_ReadEventCountRetryCount <- declare_retry_count
                                                      Proxy.Proxy
               let _ = Hs.pure ReadResp_ReadEventCountRetryCount <*>
                         HsJSONPB.asProxy declare_retry_count
               let declare_no_retry_count = HsJSONPB.declareSchemaRef
               readResp_ReadEventCountNoRetryCount <- declare_no_retry_count
                                                        Proxy.Proxy
               let _ = Hs.pure ReadResp_ReadEventCountNoRetryCount <*>
                         HsJSONPB.asProxy declare_no_retry_count
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadResp_ReadEventCount",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("retry_count",
                                                         readResp_ReadEventCountRetryCount),
                                                        ("no_retry_count",
                                                         readResp_ReadEventCountNoRetryCount)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
newtype ReadResp_SubscriptionConfirmation = ReadResp_SubscriptionConfirmation{readResp_SubscriptionConfirmationSubscriptionId
                                                                              :: Hs.Text}
                                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadResp_SubscriptionConfirmation where
        nameOf _ = (Hs.fromString "ReadResp_SubscriptionConfirmation")
 
instance HsProtobuf.HasDefault ReadResp_SubscriptionConfirmation
 
instance HsProtobuf.Message ReadResp_SubscriptionConfirmation where
        encodeMessage _
          ReadResp_SubscriptionConfirmation{readResp_SubscriptionConfirmationSubscriptionId
                                              = readResp_SubscriptionConfirmationSubscriptionId}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   readResp_SubscriptionConfirmationSubscriptionId)])
        decodeMessage _
          = (Hs.pure ReadResp_SubscriptionConfirmation) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "subscription_id")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ReadResp_SubscriptionConfirmation where
        toJSONPB (ReadResp_SubscriptionConfirmation f1)
          = (HsJSONPB.object ["subscription_id" .= f1])
        toEncodingPB (ReadResp_SubscriptionConfirmation f1)
          = (HsJSONPB.pairs ["subscription_id" .= f1])
 
instance HsJSONPB.FromJSONPB ReadResp_SubscriptionConfirmation
         where
        parseJSONPB
          = (HsJSONPB.withObject "ReadResp_SubscriptionConfirmation"
               (\ obj ->
                  (Hs.pure ReadResp_SubscriptionConfirmation) <*>
                    obj .: "subscription_id"))
 
instance HsJSONPB.ToJSON ReadResp_SubscriptionConfirmation where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ReadResp_SubscriptionConfirmation where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ReadResp_SubscriptionConfirmation where
        declareNamedSchema _
          = do let declare_subscription_id = HsJSONPB.declareSchemaRef
               readResp_SubscriptionConfirmationSubscriptionId <- declare_subscription_id
                                                                    Proxy.Proxy
               let _ = Hs.pure ReadResp_SubscriptionConfirmation <*>
                         HsJSONPB.asProxy declare_subscription_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadResp_SubscriptionConfirmation",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("subscription_id",
                                                         readResp_SubscriptionConfirmationSubscriptionId)]}})
 
data ReadRespContent = ReadRespContentEvent Persistent.ReadResp_ReadEvent
                     | ReadRespContentSubscriptionConfirmation Persistent.ReadResp_SubscriptionConfirmation
                     deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ReadRespContent where
        nameOf _ = (Hs.fromString "ReadRespContent")
 
instance HsJSONPB.ToSchema ReadRespContent where
        declareNamedSchema _
          = do let declare_event = HsJSONPB.declareSchemaRef
               readRespContentEvent <- declare_event Proxy.Proxy
               let _ = Hs.pure ReadRespContentEvent <*>
                         HsJSONPB.asProxy declare_event
               let declare_subscription_confirmation = HsJSONPB.declareSchemaRef
               readRespContentSubscriptionConfirmation <- declare_subscription_confirmation
                                                            Proxy.Proxy
               let _ = Hs.pure ReadRespContentSubscriptionConfirmation <*>
                         HsJSONPB.asProxy declare_subscription_confirmation
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ReadRespContent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("event", readRespContentEvent),
                                                        ("subscription_confirmation",
                                                         readRespContentSubscriptionConfirmation)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
newtype CreateReq = CreateReq{createReqOptions ::
                              Hs.Maybe Persistent.CreateReq_Options}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CreateReq where
        nameOf _ = (Hs.fromString "CreateReq")
 
instance HsProtobuf.HasDefault CreateReq
 
instance HsProtobuf.Message CreateReq where
        encodeMessage _ CreateReq{createReqOptions = createReqOptions}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Persistent.CreateReq_Options)
                      @(HsProtobuf.Nested Persistent.CreateReq_Options)
                      createReqOptions))])
        decodeMessage _
          = (Hs.pure CreateReq) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Persistent.CreateReq_Options))
                 @(_ (Hs.Maybe Persistent.CreateReq_Options))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Options")))
                (HsProtobuf.Single "options")
                []
                "")]
 
instance HsJSONPB.ToJSONPB CreateReq where
        toJSONPB (CreateReq f1) = (HsJSONPB.object ["options" .= f1])
        toEncodingPB (CreateReq f1) = (HsJSONPB.pairs ["options" .= f1])
 
instance HsJSONPB.FromJSONPB CreateReq where
        parseJSONPB
          = (HsJSONPB.withObject "CreateReq"
               (\ obj -> (Hs.pure CreateReq) <*> obj .: "options"))
 
instance HsJSONPB.ToJSON CreateReq where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CreateReq where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CreateReq where
        declareNamedSchema _
          = do let declare_options = HsJSONPB.declareSchemaRef
               createReqOptions <- declare_options Proxy.Proxy
               let _ = Hs.pure CreateReq <*> HsJSONPB.asProxy declare_options
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CreateReq",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("options", createReqOptions)]}})
 
data CreateReq_Options = CreateReq_Options{createReq_OptionsStreamIdentifier
                                           :: Hs.Maybe Shared.StreamIdentifier,
                                           createReq_OptionsGroupName :: Hs.Text,
                                           createReq_OptionsSettings ::
                                           Hs.Maybe Persistent.CreateReq_Settings}
                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CreateReq_Options where
        nameOf _ = (Hs.fromString "CreateReq_Options")
 
instance HsProtobuf.HasDefault CreateReq_Options
 
instance HsProtobuf.Message CreateReq_Options where
        encodeMessage _
          CreateReq_Options{createReq_OptionsStreamIdentifier =
                              createReq_OptionsStreamIdentifier,
                            createReq_OptionsGroupName = createReq_OptionsGroupName,
                            createReq_OptionsSettings = createReq_OptionsSettings}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Shared.StreamIdentifier)
                      @(HsProtobuf.Nested Shared.StreamIdentifier)
                      createReq_OptionsStreamIdentifier)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   createReq_OptionsGroupName),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Persistent.CreateReq_Settings)
                      @(HsProtobuf.Nested Persistent.CreateReq_Settings)
                      createReq_OptionsSettings))])
        decodeMessage _
          = (Hs.pure CreateReq_Options) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Shared.StreamIdentifier))
                 @(_ (Hs.Maybe Shared.StreamIdentifier))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Persistent.CreateReq_Settings))
                 @(_ (Hs.Maybe Persistent.CreateReq_Settings))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path
                            ("event_store" Hs.:| ["client", "shared", "StreamIdentifier"])))))
                (HsProtobuf.Single "stream_identifier")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "group_name")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Settings")))
                (HsProtobuf.Single "settings")
                []
                "")]
 
instance HsJSONPB.ToJSONPB CreateReq_Options where
        toJSONPB (CreateReq_Options f1 f2 f3)
          = (HsJSONPB.object
               ["stream_identifier" .= f1, "group_name" .= f2, "settings" .= f3])
        toEncodingPB (CreateReq_Options f1 f2 f3)
          = (HsJSONPB.pairs
               ["stream_identifier" .= f1, "group_name" .= f2, "settings" .= f3])
 
instance HsJSONPB.FromJSONPB CreateReq_Options where
        parseJSONPB
          = (HsJSONPB.withObject "CreateReq_Options"
               (\ obj ->
                  (Hs.pure CreateReq_Options) <*> obj .: "stream_identifier" <*>
                    obj .: "group_name"
                    <*> obj .: "settings"))
 
instance HsJSONPB.ToJSON CreateReq_Options where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CreateReq_Options where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CreateReq_Options where
        declareNamedSchema _
          = do let declare_stream_identifier = HsJSONPB.declareSchemaRef
               createReq_OptionsStreamIdentifier <- declare_stream_identifier
                                                      Proxy.Proxy
               let declare_group_name = HsJSONPB.declareSchemaRef
               createReq_OptionsGroupName <- declare_group_name Proxy.Proxy
               let declare_settings = HsJSONPB.declareSchemaRef
               createReq_OptionsSettings <- declare_settings Proxy.Proxy
               let _ = Hs.pure CreateReq_Options <*>
                         HsJSONPB.asProxy declare_stream_identifier
                         <*> HsJSONPB.asProxy declare_group_name
                         <*> HsJSONPB.asProxy declare_settings
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CreateReq_Options",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("stream_identifier",
                                                         createReq_OptionsStreamIdentifier),
                                                        ("group_name", createReq_OptionsGroupName),
                                                        ("settings", createReq_OptionsSettings)]}})
 
data CreateReq_Settings = CreateReq_Settings{createReq_SettingsResolveLinks
                                             :: Hs.Bool,
                                             createReq_SettingsRevision :: Hs.Word64,
                                             createReq_SettingsExtraStatistics :: Hs.Bool,
                                             createReq_SettingsMaxRetryCount :: Hs.Int32,
                                             createReq_SettingsMinCheckpointCount :: Hs.Int32,
                                             createReq_SettingsMaxCheckpointCount :: Hs.Int32,
                                             createReq_SettingsMaxSubscriberCount :: Hs.Int32,
                                             createReq_SettingsLiveBufferSize :: Hs.Int32,
                                             createReq_SettingsReadBatchSize :: Hs.Int32,
                                             createReq_SettingsHistoryBufferSize :: Hs.Int32,
                                             createReq_SettingsNamedConsumerStrategy ::
                                             HsProtobuf.Enumerated
                                               Persistent.CreateReq_ConsumerStrategy,
                                             createReq_SettingsMessageTimeout ::
                                             Hs.Maybe CreateReq_SettingsMessageTimeout,
                                             createReq_SettingsCheckpointAfter ::
                                             Hs.Maybe CreateReq_SettingsCheckpointAfter}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CreateReq_Settings where
        nameOf _ = (Hs.fromString "CreateReq_Settings")
 
instance HsProtobuf.HasDefault CreateReq_Settings
 
instance HsProtobuf.Message CreateReq_Settings where
        encodeMessage _
          CreateReq_Settings{createReq_SettingsResolveLinks =
                               createReq_SettingsResolveLinks,
                             createReq_SettingsRevision = createReq_SettingsRevision,
                             createReq_SettingsExtraStatistics =
                               createReq_SettingsExtraStatistics,
                             createReq_SettingsMaxRetryCount = createReq_SettingsMaxRetryCount,
                             createReq_SettingsMinCheckpointCount =
                               createReq_SettingsMinCheckpointCount,
                             createReq_SettingsMaxCheckpointCount =
                               createReq_SettingsMaxCheckpointCount,
                             createReq_SettingsMaxSubscriberCount =
                               createReq_SettingsMaxSubscriberCount,
                             createReq_SettingsLiveBufferSize =
                               createReq_SettingsLiveBufferSize,
                             createReq_SettingsReadBatchSize = createReq_SettingsReadBatchSize,
                             createReq_SettingsHistoryBufferSize =
                               createReq_SettingsHistoryBufferSize,
                             createReq_SettingsNamedConsumerStrategy =
                               createReq_SettingsNamedConsumerStrategy,
                             createReq_SettingsMessageTimeout =
                               createReq_SettingsMessageTimeout,
                             createReq_SettingsCheckpointAfter =
                               createReq_SettingsCheckpointAfter}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   createReq_SettingsResolveLinks),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   createReq_SettingsRevision),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   createReq_SettingsExtraStatistics),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   createReq_SettingsMaxRetryCount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   createReq_SettingsMinCheckpointCount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   createReq_SettingsMaxCheckpointCount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                   createReq_SettingsMaxSubscriberCount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                   createReq_SettingsLiveBufferSize),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 11)
                   createReq_SettingsReadBatchSize),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                   createReq_SettingsHistoryBufferSize),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 13)
                   createReq_SettingsNamedConsumerStrategy),
                case createReq_SettingsMessageTimeout of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             CreateReq_SettingsMessageTimeoutMessageTimeoutTicks y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                                     (HsProtobuf.ForceEmit y))
                             CreateReq_SettingsMessageTimeoutMessageTimeoutMs y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 14)
                                     (HsProtobuf.ForceEmit y)),
                case createReq_SettingsCheckpointAfter of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             CreateReq_SettingsCheckpointAfterCheckpointAfterTicks y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                                     (HsProtobuf.ForceEmit y))
                             CreateReq_SettingsCheckpointAfterCheckpointAfterMs y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 15)
                                     (HsProtobuf.ForceEmit y))])
        decodeMessage _
          = (Hs.pure CreateReq_Settings) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 5))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 7))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 8))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 9))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 10))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 11))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 12))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 13))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 4),
                   (Hs.pure
                      (Hs.Just Hs.. CreateReq_SettingsMessageTimeoutMessageTimeoutTicks))
                     <*> HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 14),
                   (Hs.pure
                      (Hs.Just Hs.. CreateReq_SettingsMessageTimeoutMessageTimeoutMs))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 6),
                   (Hs.pure
                      (Hs.Just Hs..
                         CreateReq_SettingsCheckpointAfterCheckpointAfterTicks))
                     <*> HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 15),
                   (Hs.pure
                      (Hs.Just Hs.. CreateReq_SettingsCheckpointAfterCheckpointAfterMs))
                     <*> HsProtobuf.decodeMessageField)])
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "resolve_links")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.UInt64)
                (HsProtobuf.Single "revision")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "extra_statistics")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "max_retry_count")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "min_checkpoint_count")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "max_checkpoint_count")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 9)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "max_subscriber_count")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 10)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "live_buffer_size")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 11)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "read_batch_size")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 12)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "history_buffer_size")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 13)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "ConsumerStrategy")))
                (HsProtobuf.Single "named_consumer_strategy")
                []
                "")]
 
instance HsJSONPB.ToJSONPB CreateReq_Settings where
        toJSONPB
          (CreateReq_Settings f1 f2 f3 f5 f7 f8 f9 f10 f11 f12 f13 f4_or_f14
             f6_or_f15)
          = (HsJSONPB.object
               ["resolve_links" .= f1, "revision" .= f2, "extra_statistics" .= f3,
                "max_retry_count" .= f5, "min_checkpoint_count" .= f7,
                "max_checkpoint_count" .= f8, "max_subscriber_count" .= f9,
                "live_buffer_size" .= f10, "read_batch_size" .= f11,
                "history_buffer_size" .= f12, "named_consumer_strategy" .= f13,
                (let encodeMessage_timeout
                       = (case f4_or_f14 of
                              Hs.Just (CreateReq_SettingsMessageTimeoutMessageTimeoutTicks f4)
                                -> (HsJSONPB.pair "message_timeout_ticks" f4)
                              Hs.Just (CreateReq_SettingsMessageTimeoutMessageTimeoutMs f14)
                                -> (HsJSONPB.pair "message_timeout_ms" f14)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("message_timeout" .=
                          (HsJSONPB.objectOrNull [encodeMessage_timeout] options))
                         options
                       else encodeMessage_timeout options),
                (let encodeCheckpoint_after
                       = (case f6_or_f15 of
                              Hs.Just (CreateReq_SettingsCheckpointAfterCheckpointAfterTicks f6)
                                -> (HsJSONPB.pair "checkpoint_after_ticks" f6)
                              Hs.Just (CreateReq_SettingsCheckpointAfterCheckpointAfterMs f15)
                                -> (HsJSONPB.pair "checkpoint_after_ms" f15)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("checkpoint_after" .=
                          (HsJSONPB.objectOrNull [encodeCheckpoint_after] options))
                         options
                       else encodeCheckpoint_after options)])
        toEncodingPB
          (CreateReq_Settings f1 f2 f3 f5 f7 f8 f9 f10 f11 f12 f13 f4_or_f14
             f6_or_f15)
          = (HsJSONPB.pairs
               ["resolve_links" .= f1, "revision" .= f2, "extra_statistics" .= f3,
                "max_retry_count" .= f5, "min_checkpoint_count" .= f7,
                "max_checkpoint_count" .= f8, "max_subscriber_count" .= f9,
                "live_buffer_size" .= f10, "read_batch_size" .= f11,
                "history_buffer_size" .= f12, "named_consumer_strategy" .= f13,
                (let encodeMessage_timeout
                       = (case f4_or_f14 of
                              Hs.Just (CreateReq_SettingsMessageTimeoutMessageTimeoutTicks f4)
                                -> (HsJSONPB.pair "message_timeout_ticks" f4)
                              Hs.Just (CreateReq_SettingsMessageTimeoutMessageTimeoutMs f14)
                                -> (HsJSONPB.pair "message_timeout_ms" f14)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("message_timeout" .=
                          (HsJSONPB.pairsOrNull [encodeMessage_timeout] options))
                         options
                       else encodeMessage_timeout options),
                (let encodeCheckpoint_after
                       = (case f6_or_f15 of
                              Hs.Just (CreateReq_SettingsCheckpointAfterCheckpointAfterTicks f6)
                                -> (HsJSONPB.pair "checkpoint_after_ticks" f6)
                              Hs.Just (CreateReq_SettingsCheckpointAfterCheckpointAfterMs f15)
                                -> (HsJSONPB.pair "checkpoint_after_ms" f15)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("checkpoint_after" .=
                          (HsJSONPB.pairsOrNull [encodeCheckpoint_after] options))
                         options
                       else encodeCheckpoint_after options)])
 
instance HsJSONPB.FromJSONPB CreateReq_Settings where
        parseJSONPB
          = (HsJSONPB.withObject "CreateReq_Settings"
               (\ obj ->
                  (Hs.pure CreateReq_Settings) <*> obj .: "resolve_links" <*>
                    obj .: "revision"
                    <*> obj .: "extra_statistics"
                    <*> obj .: "max_retry_count"
                    <*> obj .: "min_checkpoint_count"
                    <*> obj .: "max_checkpoint_count"
                    <*> obj .: "max_subscriber_count"
                    <*> obj .: "live_buffer_size"
                    <*> obj .: "read_batch_size"
                    <*> obj .: "history_buffer_size"
                    <*> obj .: "named_consumer_strategy"
                    <*>
                    (let parseMessage_timeout parseObj
                           = Hs.msum
                               [Hs.Just Hs.. CreateReq_SettingsMessageTimeoutMessageTimeoutTicks
                                  <$> (HsJSONPB.parseField parseObj "message_timeout_ticks"),
                                Hs.Just Hs.. CreateReq_SettingsMessageTimeoutMessageTimeoutMs <$>
                                  (HsJSONPB.parseField parseObj "message_timeout_ms"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "message_timeout") Hs.>>=
                          (HsJSONPB.withObject "message_timeout" parseMessage_timeout))
                         <|> (parseMessage_timeout obj))
                    <*>
                    (let parseCheckpoint_after parseObj
                           = Hs.msum
                               [Hs.Just Hs.. CreateReq_SettingsCheckpointAfterCheckpointAfterTicks
                                  <$> (HsJSONPB.parseField parseObj "checkpoint_after_ticks"),
                                Hs.Just Hs.. CreateReq_SettingsCheckpointAfterCheckpointAfterMs <$>
                                  (HsJSONPB.parseField parseObj "checkpoint_after_ms"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "checkpoint_after") Hs.>>=
                          (HsJSONPB.withObject "checkpoint_after" parseCheckpoint_after))
                         <|> (parseCheckpoint_after obj))))
 
instance HsJSONPB.ToJSON CreateReq_Settings where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CreateReq_Settings where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CreateReq_Settings where
        declareNamedSchema _
          = do let declare_resolve_links = HsJSONPB.declareSchemaRef
               createReq_SettingsResolveLinks <- declare_resolve_links Proxy.Proxy
               let declare_revision = HsJSONPB.declareSchemaRef
               createReq_SettingsRevision <- declare_revision Proxy.Proxy
               let declare_extra_statistics = HsJSONPB.declareSchemaRef
               createReq_SettingsExtraStatistics <- declare_extra_statistics
                                                      Proxy.Proxy
               let declare_max_retry_count = HsJSONPB.declareSchemaRef
               createReq_SettingsMaxRetryCount <- declare_max_retry_count
                                                    Proxy.Proxy
               let declare_min_checkpoint_count = HsJSONPB.declareSchemaRef
               createReq_SettingsMinCheckpointCount <- declare_min_checkpoint_count
                                                         Proxy.Proxy
               let declare_max_checkpoint_count = HsJSONPB.declareSchemaRef
               createReq_SettingsMaxCheckpointCount <- declare_max_checkpoint_count
                                                         Proxy.Proxy
               let declare_max_subscriber_count = HsJSONPB.declareSchemaRef
               createReq_SettingsMaxSubscriberCount <- declare_max_subscriber_count
                                                         Proxy.Proxy
               let declare_live_buffer_size = HsJSONPB.declareSchemaRef
               createReq_SettingsLiveBufferSize <- declare_live_buffer_size
                                                     Proxy.Proxy
               let declare_read_batch_size = HsJSONPB.declareSchemaRef
               createReq_SettingsReadBatchSize <- declare_read_batch_size
                                                    Proxy.Proxy
               let declare_history_buffer_size = HsJSONPB.declareSchemaRef
               createReq_SettingsHistoryBufferSize <- declare_history_buffer_size
                                                        Proxy.Proxy
               let declare_named_consumer_strategy = HsJSONPB.declareSchemaRef
               createReq_SettingsNamedConsumerStrategy <- declare_named_consumer_strategy
                                                            Proxy.Proxy
               let declare_message_timeout = HsJSONPB.declareSchemaRef
               createReq_SettingsMessageTimeout <- declare_message_timeout
                                                     Proxy.Proxy
               let declare_checkpoint_after = HsJSONPB.declareSchemaRef
               createReq_SettingsCheckpointAfter <- declare_checkpoint_after
                                                      Proxy.Proxy
               let _ = Hs.pure CreateReq_Settings <*>
                         HsJSONPB.asProxy declare_resolve_links
                         <*> HsJSONPB.asProxy declare_revision
                         <*> HsJSONPB.asProxy declare_extra_statistics
                         <*> HsJSONPB.asProxy declare_max_retry_count
                         <*> HsJSONPB.asProxy declare_min_checkpoint_count
                         <*> HsJSONPB.asProxy declare_max_checkpoint_count
                         <*> HsJSONPB.asProxy declare_max_subscriber_count
                         <*> HsJSONPB.asProxy declare_live_buffer_size
                         <*> HsJSONPB.asProxy declare_read_batch_size
                         <*> HsJSONPB.asProxy declare_history_buffer_size
                         <*> HsJSONPB.asProxy declare_named_consumer_strategy
                         <*> HsJSONPB.asProxy declare_message_timeout
                         <*> HsJSONPB.asProxy declare_checkpoint_after
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CreateReq_Settings",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("resolve_links",
                                                         createReq_SettingsResolveLinks),
                                                        ("revision", createReq_SettingsRevision),
                                                        ("extra_statistics",
                                                         createReq_SettingsExtraStatistics),
                                                        ("max_retry_count",
                                                         createReq_SettingsMaxRetryCount),
                                                        ("min_checkpoint_count",
                                                         createReq_SettingsMinCheckpointCount),
                                                        ("max_checkpoint_count",
                                                         createReq_SettingsMaxCheckpointCount),
                                                        ("max_subscriber_count",
                                                         createReq_SettingsMaxSubscriberCount),
                                                        ("live_buffer_size",
                                                         createReq_SettingsLiveBufferSize),
                                                        ("read_batch_size",
                                                         createReq_SettingsReadBatchSize),
                                                        ("history_buffer_size",
                                                         createReq_SettingsHistoryBufferSize),
                                                        ("named_consumer_strategy",
                                                         createReq_SettingsNamedConsumerStrategy),
                                                        ("message_timeout",
                                                         createReq_SettingsMessageTimeout),
                                                        ("checkpoint_after",
                                                         createReq_SettingsCheckpointAfter)]}})
 
data CreateReq_SettingsMessageTimeout = CreateReq_SettingsMessageTimeoutMessageTimeoutTicks Hs.Int64
                                      | CreateReq_SettingsMessageTimeoutMessageTimeoutMs Hs.Int32
                                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CreateReq_SettingsMessageTimeout where
        nameOf _ = (Hs.fromString "CreateReq_SettingsMessageTimeout")
 
instance HsJSONPB.ToSchema CreateReq_SettingsMessageTimeout where
        declareNamedSchema _
          = do let declare_message_timeout_ticks = HsJSONPB.declareSchemaRef
               createReq_SettingsMessageTimeoutMessageTimeoutTicks <- declare_message_timeout_ticks
                                                                        Proxy.Proxy
               let _ = Hs.pure CreateReq_SettingsMessageTimeoutMessageTimeoutTicks
                         <*> HsJSONPB.asProxy declare_message_timeout_ticks
               let declare_message_timeout_ms = HsJSONPB.declareSchemaRef
               createReq_SettingsMessageTimeoutMessageTimeoutMs <- declare_message_timeout_ms
                                                                     Proxy.Proxy
               let _ = Hs.pure CreateReq_SettingsMessageTimeoutMessageTimeoutMs
                         <*> HsJSONPB.asProxy declare_message_timeout_ms
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CreateReq_SettingsMessageTimeout",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("message_timeout_ticks",
                                                         createReq_SettingsMessageTimeoutMessageTimeoutTicks),
                                                        ("message_timeout_ms",
                                                         createReq_SettingsMessageTimeoutMessageTimeoutMs)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data CreateReq_SettingsCheckpointAfter = CreateReq_SettingsCheckpointAfterCheckpointAfterTicks Hs.Int64
                                       | CreateReq_SettingsCheckpointAfterCheckpointAfterMs Hs.Int32
                                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CreateReq_SettingsCheckpointAfter where
        nameOf _ = (Hs.fromString "CreateReq_SettingsCheckpointAfter")
 
instance HsJSONPB.ToSchema CreateReq_SettingsCheckpointAfter where
        declareNamedSchema _
          = do let declare_checkpoint_after_ticks = HsJSONPB.declareSchemaRef
               createReq_SettingsCheckpointAfterCheckpointAfterTicks <- declare_checkpoint_after_ticks
                                                                          Proxy.Proxy
               let _ = Hs.pure
                         CreateReq_SettingsCheckpointAfterCheckpointAfterTicks
                         <*> HsJSONPB.asProxy declare_checkpoint_after_ticks
               let declare_checkpoint_after_ms = HsJSONPB.declareSchemaRef
               createReq_SettingsCheckpointAfterCheckpointAfterMs <- declare_checkpoint_after_ms
                                                                       Proxy.Proxy
               let _ = Hs.pure CreateReq_SettingsCheckpointAfterCheckpointAfterMs
                         <*> HsJSONPB.asProxy declare_checkpoint_after_ms
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CreateReq_SettingsCheckpointAfter",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("checkpoint_after_ticks",
                                                         createReq_SettingsCheckpointAfterCheckpointAfterTicks),
                                                        ("checkpoint_after_ms",
                                                         createReq_SettingsCheckpointAfterCheckpointAfterMs)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data CreateReq_ConsumerStrategy = CreateReq_ConsumerStrategyDispatchToSingle
                                | CreateReq_ConsumerStrategyRoundRobin
                                | CreateReq_ConsumerStrategyPinned
                                deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CreateReq_ConsumerStrategy where
        nameOf _ = (Hs.fromString "CreateReq_ConsumerStrategy")
 
instance HsProtobuf.HasDefault CreateReq_ConsumerStrategy
 
instance Hs.Bounded CreateReq_ConsumerStrategy where
        minBound = CreateReq_ConsumerStrategyDispatchToSingle
        maxBound = CreateReq_ConsumerStrategyPinned
 
instance Hs.Ord CreateReq_ConsumerStrategy where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum CreateReq_ConsumerStrategy where
        toProtoEnumMay 0
          = Hs.Just CreateReq_ConsumerStrategyDispatchToSingle
        toProtoEnumMay 1 = Hs.Just CreateReq_ConsumerStrategyRoundRobin
        toProtoEnumMay 2 = Hs.Just CreateReq_ConsumerStrategyPinned
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (CreateReq_ConsumerStrategyDispatchToSingle) = 0
        fromProtoEnum (CreateReq_ConsumerStrategyRoundRobin) = 1
        fromProtoEnum (CreateReq_ConsumerStrategyPinned) = 2
 
instance HsJSONPB.ToJSONPB CreateReq_ConsumerStrategy where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB CreateReq_ConsumerStrategy where
        parseJSONPB (HsJSONPB.String "DispatchToSingle")
          = Hs.pure CreateReq_ConsumerStrategyDispatchToSingle
        parseJSONPB (HsJSONPB.String "RoundRobin")
          = Hs.pure CreateReq_ConsumerStrategyRoundRobin
        parseJSONPB (HsJSONPB.String "Pinned")
          = Hs.pure CreateReq_ConsumerStrategyPinned
        parseJSONPB v
          = (HsJSONPB.typeMismatch "CreateReq_ConsumerStrategy" v)
 
instance HsJSONPB.ToJSON CreateReq_ConsumerStrategy where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CreateReq_ConsumerStrategy where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite CreateReq_ConsumerStrategy
 
data CreateResp = CreateResp{}
                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CreateResp where
        nameOf _ = (Hs.fromString "CreateResp")
 
instance HsProtobuf.HasDefault CreateResp
 
instance HsProtobuf.Message CreateResp where
        encodeMessage _ CreateResp{} = (Hs.mconcat [])
        decodeMessage _ = (Hs.pure CreateResp)
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB CreateResp where
        toJSONPB (CreateResp) = (HsJSONPB.object [])
        toEncodingPB (CreateResp) = (HsJSONPB.pairs [])
 
instance HsJSONPB.FromJSONPB CreateResp where
        parseJSONPB
          = (HsJSONPB.withObject "CreateResp"
               (\ obj -> (Hs.pure CreateResp)))
 
instance HsJSONPB.ToJSON CreateResp where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CreateResp where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CreateResp where
        declareNamedSchema _
          = do Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CreateResp",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList []}})
 
newtype UpdateReq = UpdateReq{updateReqOptions ::
                              Hs.Maybe Persistent.UpdateReq_Options}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UpdateReq where
        nameOf _ = (Hs.fromString "UpdateReq")
 
instance HsProtobuf.HasDefault UpdateReq
 
instance HsProtobuf.Message UpdateReq where
        encodeMessage _ UpdateReq{updateReqOptions = updateReqOptions}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Persistent.UpdateReq_Options)
                      @(HsProtobuf.Nested Persistent.UpdateReq_Options)
                      updateReqOptions))])
        decodeMessage _
          = (Hs.pure UpdateReq) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Persistent.UpdateReq_Options))
                 @(_ (Hs.Maybe Persistent.UpdateReq_Options))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Options")))
                (HsProtobuf.Single "options")
                []
                "")]
 
instance HsJSONPB.ToJSONPB UpdateReq where
        toJSONPB (UpdateReq f1) = (HsJSONPB.object ["options" .= f1])
        toEncodingPB (UpdateReq f1) = (HsJSONPB.pairs ["options" .= f1])
 
instance HsJSONPB.FromJSONPB UpdateReq where
        parseJSONPB
          = (HsJSONPB.withObject "UpdateReq"
               (\ obj -> (Hs.pure UpdateReq) <*> obj .: "options"))
 
instance HsJSONPB.ToJSON UpdateReq where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON UpdateReq where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema UpdateReq where
        declareNamedSchema _
          = do let declare_options = HsJSONPB.declareSchemaRef
               updateReqOptions <- declare_options Proxy.Proxy
               let _ = Hs.pure UpdateReq <*> HsJSONPB.asProxy declare_options
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UpdateReq",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("options", updateReqOptions)]}})
 
data UpdateReq_Options = UpdateReq_Options{updateReq_OptionsStreamIdentifier
                                           :: Hs.Maybe Shared.StreamIdentifier,
                                           updateReq_OptionsGroupName :: Hs.Text,
                                           updateReq_OptionsSettings ::
                                           Hs.Maybe Persistent.UpdateReq_Settings}
                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UpdateReq_Options where
        nameOf _ = (Hs.fromString "UpdateReq_Options")
 
instance HsProtobuf.HasDefault UpdateReq_Options
 
instance HsProtobuf.Message UpdateReq_Options where
        encodeMessage _
          UpdateReq_Options{updateReq_OptionsStreamIdentifier =
                              updateReq_OptionsStreamIdentifier,
                            updateReq_OptionsGroupName = updateReq_OptionsGroupName,
                            updateReq_OptionsSettings = updateReq_OptionsSettings}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Shared.StreamIdentifier)
                      @(HsProtobuf.Nested Shared.StreamIdentifier)
                      updateReq_OptionsStreamIdentifier)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   updateReq_OptionsGroupName),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Persistent.UpdateReq_Settings)
                      @(HsProtobuf.Nested Persistent.UpdateReq_Settings)
                      updateReq_OptionsSettings))])
        decodeMessage _
          = (Hs.pure UpdateReq_Options) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Shared.StreamIdentifier))
                 @(_ (Hs.Maybe Shared.StreamIdentifier))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Persistent.UpdateReq_Settings))
                 @(_ (Hs.Maybe Persistent.UpdateReq_Settings))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path
                            ("event_store" Hs.:| ["client", "shared", "StreamIdentifier"])))))
                (HsProtobuf.Single "stream_identifier")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "group_name")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Settings")))
                (HsProtobuf.Single "settings")
                []
                "")]
 
instance HsJSONPB.ToJSONPB UpdateReq_Options where
        toJSONPB (UpdateReq_Options f1 f2 f3)
          = (HsJSONPB.object
               ["stream_identifier" .= f1, "group_name" .= f2, "settings" .= f3])
        toEncodingPB (UpdateReq_Options f1 f2 f3)
          = (HsJSONPB.pairs
               ["stream_identifier" .= f1, "group_name" .= f2, "settings" .= f3])
 
instance HsJSONPB.FromJSONPB UpdateReq_Options where
        parseJSONPB
          = (HsJSONPB.withObject "UpdateReq_Options"
               (\ obj ->
                  (Hs.pure UpdateReq_Options) <*> obj .: "stream_identifier" <*>
                    obj .: "group_name"
                    <*> obj .: "settings"))
 
instance HsJSONPB.ToJSON UpdateReq_Options where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON UpdateReq_Options where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema UpdateReq_Options where
        declareNamedSchema _
          = do let declare_stream_identifier = HsJSONPB.declareSchemaRef
               updateReq_OptionsStreamIdentifier <- declare_stream_identifier
                                                      Proxy.Proxy
               let declare_group_name = HsJSONPB.declareSchemaRef
               updateReq_OptionsGroupName <- declare_group_name Proxy.Proxy
               let declare_settings = HsJSONPB.declareSchemaRef
               updateReq_OptionsSettings <- declare_settings Proxy.Proxy
               let _ = Hs.pure UpdateReq_Options <*>
                         HsJSONPB.asProxy declare_stream_identifier
                         <*> HsJSONPB.asProxy declare_group_name
                         <*> HsJSONPB.asProxy declare_settings
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UpdateReq_Options",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("stream_identifier",
                                                         updateReq_OptionsStreamIdentifier),
                                                        ("group_name", updateReq_OptionsGroupName),
                                                        ("settings", updateReq_OptionsSettings)]}})
 
data UpdateReq_Settings = UpdateReq_Settings{updateReq_SettingsResolveLinks
                                             :: Hs.Bool,
                                             updateReq_SettingsRevision :: Hs.Word64,
                                             updateReq_SettingsExtraStatistics :: Hs.Bool,
                                             updateReq_SettingsMaxRetryCount :: Hs.Int32,
                                             updateReq_SettingsMinCheckpointCount :: Hs.Int32,
                                             updateReq_SettingsMaxCheckpointCount :: Hs.Int32,
                                             updateReq_SettingsMaxSubscriberCount :: Hs.Int32,
                                             updateReq_SettingsLiveBufferSize :: Hs.Int32,
                                             updateReq_SettingsReadBatchSize :: Hs.Int32,
                                             updateReq_SettingsHistoryBufferSize :: Hs.Int32,
                                             updateReq_SettingsNamedConsumerStrategy ::
                                             HsProtobuf.Enumerated
                                               Persistent.UpdateReq_ConsumerStrategy,
                                             updateReq_SettingsMessageTimeout ::
                                             Hs.Maybe UpdateReq_SettingsMessageTimeout,
                                             updateReq_SettingsCheckpointAfter ::
                                             Hs.Maybe UpdateReq_SettingsCheckpointAfter}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UpdateReq_Settings where
        nameOf _ = (Hs.fromString "UpdateReq_Settings")
 
instance HsProtobuf.HasDefault UpdateReq_Settings
 
instance HsProtobuf.Message UpdateReq_Settings where
        encodeMessage _
          UpdateReq_Settings{updateReq_SettingsResolveLinks =
                               updateReq_SettingsResolveLinks,
                             updateReq_SettingsRevision = updateReq_SettingsRevision,
                             updateReq_SettingsExtraStatistics =
                               updateReq_SettingsExtraStatistics,
                             updateReq_SettingsMaxRetryCount = updateReq_SettingsMaxRetryCount,
                             updateReq_SettingsMinCheckpointCount =
                               updateReq_SettingsMinCheckpointCount,
                             updateReq_SettingsMaxCheckpointCount =
                               updateReq_SettingsMaxCheckpointCount,
                             updateReq_SettingsMaxSubscriberCount =
                               updateReq_SettingsMaxSubscriberCount,
                             updateReq_SettingsLiveBufferSize =
                               updateReq_SettingsLiveBufferSize,
                             updateReq_SettingsReadBatchSize = updateReq_SettingsReadBatchSize,
                             updateReq_SettingsHistoryBufferSize =
                               updateReq_SettingsHistoryBufferSize,
                             updateReq_SettingsNamedConsumerStrategy =
                               updateReq_SettingsNamedConsumerStrategy,
                             updateReq_SettingsMessageTimeout =
                               updateReq_SettingsMessageTimeout,
                             updateReq_SettingsCheckpointAfter =
                               updateReq_SettingsCheckpointAfter}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   updateReq_SettingsResolveLinks),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   updateReq_SettingsRevision),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   updateReq_SettingsExtraStatistics),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   updateReq_SettingsMaxRetryCount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   updateReq_SettingsMinCheckpointCount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   updateReq_SettingsMaxCheckpointCount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                   updateReq_SettingsMaxSubscriberCount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                   updateReq_SettingsLiveBufferSize),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 11)
                   updateReq_SettingsReadBatchSize),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                   updateReq_SettingsHistoryBufferSize),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 13)
                   updateReq_SettingsNamedConsumerStrategy),
                case updateReq_SettingsMessageTimeout of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UpdateReq_SettingsMessageTimeoutMessageTimeoutTicks y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                                     (HsProtobuf.ForceEmit y))
                             UpdateReq_SettingsMessageTimeoutMessageTimeoutMs y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 14)
                                     (HsProtobuf.ForceEmit y)),
                case updateReq_SettingsCheckpointAfter of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UpdateReq_SettingsCheckpointAfterCheckpointAfterTicks y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                                     (HsProtobuf.ForceEmit y))
                             UpdateReq_SettingsCheckpointAfterCheckpointAfterMs y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 15)
                                     (HsProtobuf.ForceEmit y))])
        decodeMessage _
          = (Hs.pure UpdateReq_Settings) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 5))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 7))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 8))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 9))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 10))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 11))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 12))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 13))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 4),
                   (Hs.pure
                      (Hs.Just Hs.. UpdateReq_SettingsMessageTimeoutMessageTimeoutTicks))
                     <*> HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 14),
                   (Hs.pure
                      (Hs.Just Hs.. UpdateReq_SettingsMessageTimeoutMessageTimeoutMs))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 6),
                   (Hs.pure
                      (Hs.Just Hs..
                         UpdateReq_SettingsCheckpointAfterCheckpointAfterTicks))
                     <*> HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 15),
                   (Hs.pure
                      (Hs.Just Hs.. UpdateReq_SettingsCheckpointAfterCheckpointAfterMs))
                     <*> HsProtobuf.decodeMessageField)])
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "resolve_links")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.UInt64)
                (HsProtobuf.Single "revision")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "extra_statistics")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "max_retry_count")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "min_checkpoint_count")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "max_checkpoint_count")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 9)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "max_subscriber_count")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 10)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "live_buffer_size")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 11)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "read_batch_size")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 12)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "history_buffer_size")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 13)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "ConsumerStrategy")))
                (HsProtobuf.Single "named_consumer_strategy")
                []
                "")]
 
instance HsJSONPB.ToJSONPB UpdateReq_Settings where
        toJSONPB
          (UpdateReq_Settings f1 f2 f3 f5 f7 f8 f9 f10 f11 f12 f13 f4_or_f14
             f6_or_f15)
          = (HsJSONPB.object
               ["resolve_links" .= f1, "revision" .= f2, "extra_statistics" .= f3,
                "max_retry_count" .= f5, "min_checkpoint_count" .= f7,
                "max_checkpoint_count" .= f8, "max_subscriber_count" .= f9,
                "live_buffer_size" .= f10, "read_batch_size" .= f11,
                "history_buffer_size" .= f12, "named_consumer_strategy" .= f13,
                (let encodeMessage_timeout
                       = (case f4_or_f14 of
                              Hs.Just (UpdateReq_SettingsMessageTimeoutMessageTimeoutTicks f4)
                                -> (HsJSONPB.pair "message_timeout_ticks" f4)
                              Hs.Just (UpdateReq_SettingsMessageTimeoutMessageTimeoutMs f14)
                                -> (HsJSONPB.pair "message_timeout_ms" f14)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("message_timeout" .=
                          (HsJSONPB.objectOrNull [encodeMessage_timeout] options))
                         options
                       else encodeMessage_timeout options),
                (let encodeCheckpoint_after
                       = (case f6_or_f15 of
                              Hs.Just (UpdateReq_SettingsCheckpointAfterCheckpointAfterTicks f6)
                                -> (HsJSONPB.pair "checkpoint_after_ticks" f6)
                              Hs.Just (UpdateReq_SettingsCheckpointAfterCheckpointAfterMs f15)
                                -> (HsJSONPB.pair "checkpoint_after_ms" f15)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("checkpoint_after" .=
                          (HsJSONPB.objectOrNull [encodeCheckpoint_after] options))
                         options
                       else encodeCheckpoint_after options)])
        toEncodingPB
          (UpdateReq_Settings f1 f2 f3 f5 f7 f8 f9 f10 f11 f12 f13 f4_or_f14
             f6_or_f15)
          = (HsJSONPB.pairs
               ["resolve_links" .= f1, "revision" .= f2, "extra_statistics" .= f3,
                "max_retry_count" .= f5, "min_checkpoint_count" .= f7,
                "max_checkpoint_count" .= f8, "max_subscriber_count" .= f9,
                "live_buffer_size" .= f10, "read_batch_size" .= f11,
                "history_buffer_size" .= f12, "named_consumer_strategy" .= f13,
                (let encodeMessage_timeout
                       = (case f4_or_f14 of
                              Hs.Just (UpdateReq_SettingsMessageTimeoutMessageTimeoutTicks f4)
                                -> (HsJSONPB.pair "message_timeout_ticks" f4)
                              Hs.Just (UpdateReq_SettingsMessageTimeoutMessageTimeoutMs f14)
                                -> (HsJSONPB.pair "message_timeout_ms" f14)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("message_timeout" .=
                          (HsJSONPB.pairsOrNull [encodeMessage_timeout] options))
                         options
                       else encodeMessage_timeout options),
                (let encodeCheckpoint_after
                       = (case f6_or_f15 of
                              Hs.Just (UpdateReq_SettingsCheckpointAfterCheckpointAfterTicks f6)
                                -> (HsJSONPB.pair "checkpoint_after_ticks" f6)
                              Hs.Just (UpdateReq_SettingsCheckpointAfterCheckpointAfterMs f15)
                                -> (HsJSONPB.pair "checkpoint_after_ms" f15)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("checkpoint_after" .=
                          (HsJSONPB.pairsOrNull [encodeCheckpoint_after] options))
                         options
                       else encodeCheckpoint_after options)])
 
instance HsJSONPB.FromJSONPB UpdateReq_Settings where
        parseJSONPB
          = (HsJSONPB.withObject "UpdateReq_Settings"
               (\ obj ->
                  (Hs.pure UpdateReq_Settings) <*> obj .: "resolve_links" <*>
                    obj .: "revision"
                    <*> obj .: "extra_statistics"
                    <*> obj .: "max_retry_count"
                    <*> obj .: "min_checkpoint_count"
                    <*> obj .: "max_checkpoint_count"
                    <*> obj .: "max_subscriber_count"
                    <*> obj .: "live_buffer_size"
                    <*> obj .: "read_batch_size"
                    <*> obj .: "history_buffer_size"
                    <*> obj .: "named_consumer_strategy"
                    <*>
                    (let parseMessage_timeout parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UpdateReq_SettingsMessageTimeoutMessageTimeoutTicks
                                  <$> (HsJSONPB.parseField parseObj "message_timeout_ticks"),
                                Hs.Just Hs.. UpdateReq_SettingsMessageTimeoutMessageTimeoutMs <$>
                                  (HsJSONPB.parseField parseObj "message_timeout_ms"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "message_timeout") Hs.>>=
                          (HsJSONPB.withObject "message_timeout" parseMessage_timeout))
                         <|> (parseMessage_timeout obj))
                    <*>
                    (let parseCheckpoint_after parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UpdateReq_SettingsCheckpointAfterCheckpointAfterTicks
                                  <$> (HsJSONPB.parseField parseObj "checkpoint_after_ticks"),
                                Hs.Just Hs.. UpdateReq_SettingsCheckpointAfterCheckpointAfterMs <$>
                                  (HsJSONPB.parseField parseObj "checkpoint_after_ms"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "checkpoint_after") Hs.>>=
                          (HsJSONPB.withObject "checkpoint_after" parseCheckpoint_after))
                         <|> (parseCheckpoint_after obj))))
 
instance HsJSONPB.ToJSON UpdateReq_Settings where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON UpdateReq_Settings where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema UpdateReq_Settings where
        declareNamedSchema _
          = do let declare_resolve_links = HsJSONPB.declareSchemaRef
               updateReq_SettingsResolveLinks <- declare_resolve_links Proxy.Proxy
               let declare_revision = HsJSONPB.declareSchemaRef
               updateReq_SettingsRevision <- declare_revision Proxy.Proxy
               let declare_extra_statistics = HsJSONPB.declareSchemaRef
               updateReq_SettingsExtraStatistics <- declare_extra_statistics
                                                      Proxy.Proxy
               let declare_max_retry_count = HsJSONPB.declareSchemaRef
               updateReq_SettingsMaxRetryCount <- declare_max_retry_count
                                                    Proxy.Proxy
               let declare_min_checkpoint_count = HsJSONPB.declareSchemaRef
               updateReq_SettingsMinCheckpointCount <- declare_min_checkpoint_count
                                                         Proxy.Proxy
               let declare_max_checkpoint_count = HsJSONPB.declareSchemaRef
               updateReq_SettingsMaxCheckpointCount <- declare_max_checkpoint_count
                                                         Proxy.Proxy
               let declare_max_subscriber_count = HsJSONPB.declareSchemaRef
               updateReq_SettingsMaxSubscriberCount <- declare_max_subscriber_count
                                                         Proxy.Proxy
               let declare_live_buffer_size = HsJSONPB.declareSchemaRef
               updateReq_SettingsLiveBufferSize <- declare_live_buffer_size
                                                     Proxy.Proxy
               let declare_read_batch_size = HsJSONPB.declareSchemaRef
               updateReq_SettingsReadBatchSize <- declare_read_batch_size
                                                    Proxy.Proxy
               let declare_history_buffer_size = HsJSONPB.declareSchemaRef
               updateReq_SettingsHistoryBufferSize <- declare_history_buffer_size
                                                        Proxy.Proxy
               let declare_named_consumer_strategy = HsJSONPB.declareSchemaRef
               updateReq_SettingsNamedConsumerStrategy <- declare_named_consumer_strategy
                                                            Proxy.Proxy
               let declare_message_timeout = HsJSONPB.declareSchemaRef
               updateReq_SettingsMessageTimeout <- declare_message_timeout
                                                     Proxy.Proxy
               let declare_checkpoint_after = HsJSONPB.declareSchemaRef
               updateReq_SettingsCheckpointAfter <- declare_checkpoint_after
                                                      Proxy.Proxy
               let _ = Hs.pure UpdateReq_Settings <*>
                         HsJSONPB.asProxy declare_resolve_links
                         <*> HsJSONPB.asProxy declare_revision
                         <*> HsJSONPB.asProxy declare_extra_statistics
                         <*> HsJSONPB.asProxy declare_max_retry_count
                         <*> HsJSONPB.asProxy declare_min_checkpoint_count
                         <*> HsJSONPB.asProxy declare_max_checkpoint_count
                         <*> HsJSONPB.asProxy declare_max_subscriber_count
                         <*> HsJSONPB.asProxy declare_live_buffer_size
                         <*> HsJSONPB.asProxy declare_read_batch_size
                         <*> HsJSONPB.asProxy declare_history_buffer_size
                         <*> HsJSONPB.asProxy declare_named_consumer_strategy
                         <*> HsJSONPB.asProxy declare_message_timeout
                         <*> HsJSONPB.asProxy declare_checkpoint_after
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UpdateReq_Settings",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("resolve_links",
                                                         updateReq_SettingsResolveLinks),
                                                        ("revision", updateReq_SettingsRevision),
                                                        ("extra_statistics",
                                                         updateReq_SettingsExtraStatistics),
                                                        ("max_retry_count",
                                                         updateReq_SettingsMaxRetryCount),
                                                        ("min_checkpoint_count",
                                                         updateReq_SettingsMinCheckpointCount),
                                                        ("max_checkpoint_count",
                                                         updateReq_SettingsMaxCheckpointCount),
                                                        ("max_subscriber_count",
                                                         updateReq_SettingsMaxSubscriberCount),
                                                        ("live_buffer_size",
                                                         updateReq_SettingsLiveBufferSize),
                                                        ("read_batch_size",
                                                         updateReq_SettingsReadBatchSize),
                                                        ("history_buffer_size",
                                                         updateReq_SettingsHistoryBufferSize),
                                                        ("named_consumer_strategy",
                                                         updateReq_SettingsNamedConsumerStrategy),
                                                        ("message_timeout",
                                                         updateReq_SettingsMessageTimeout),
                                                        ("checkpoint_after",
                                                         updateReq_SettingsCheckpointAfter)]}})
 
data UpdateReq_SettingsMessageTimeout = UpdateReq_SettingsMessageTimeoutMessageTimeoutTicks Hs.Int64
                                      | UpdateReq_SettingsMessageTimeoutMessageTimeoutMs Hs.Int32
                                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UpdateReq_SettingsMessageTimeout where
        nameOf _ = (Hs.fromString "UpdateReq_SettingsMessageTimeout")
 
instance HsJSONPB.ToSchema UpdateReq_SettingsMessageTimeout where
        declareNamedSchema _
          = do let declare_message_timeout_ticks = HsJSONPB.declareSchemaRef
               updateReq_SettingsMessageTimeoutMessageTimeoutTicks <- declare_message_timeout_ticks
                                                                        Proxy.Proxy
               let _ = Hs.pure UpdateReq_SettingsMessageTimeoutMessageTimeoutTicks
                         <*> HsJSONPB.asProxy declare_message_timeout_ticks
               let declare_message_timeout_ms = HsJSONPB.declareSchemaRef
               updateReq_SettingsMessageTimeoutMessageTimeoutMs <- declare_message_timeout_ms
                                                                     Proxy.Proxy
               let _ = Hs.pure UpdateReq_SettingsMessageTimeoutMessageTimeoutMs
                         <*> HsJSONPB.asProxy declare_message_timeout_ms
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UpdateReq_SettingsMessageTimeout",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("message_timeout_ticks",
                                                         updateReq_SettingsMessageTimeoutMessageTimeoutTicks),
                                                        ("message_timeout_ms",
                                                         updateReq_SettingsMessageTimeoutMessageTimeoutMs)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UpdateReq_SettingsCheckpointAfter = UpdateReq_SettingsCheckpointAfterCheckpointAfterTicks Hs.Int64
                                       | UpdateReq_SettingsCheckpointAfterCheckpointAfterMs Hs.Int32
                                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UpdateReq_SettingsCheckpointAfter where
        nameOf _ = (Hs.fromString "UpdateReq_SettingsCheckpointAfter")
 
instance HsJSONPB.ToSchema UpdateReq_SettingsCheckpointAfter where
        declareNamedSchema _
          = do let declare_checkpoint_after_ticks = HsJSONPB.declareSchemaRef
               updateReq_SettingsCheckpointAfterCheckpointAfterTicks <- declare_checkpoint_after_ticks
                                                                          Proxy.Proxy
               let _ = Hs.pure
                         UpdateReq_SettingsCheckpointAfterCheckpointAfterTicks
                         <*> HsJSONPB.asProxy declare_checkpoint_after_ticks
               let declare_checkpoint_after_ms = HsJSONPB.declareSchemaRef
               updateReq_SettingsCheckpointAfterCheckpointAfterMs <- declare_checkpoint_after_ms
                                                                       Proxy.Proxy
               let _ = Hs.pure UpdateReq_SettingsCheckpointAfterCheckpointAfterMs
                         <*> HsJSONPB.asProxy declare_checkpoint_after_ms
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UpdateReq_SettingsCheckpointAfter",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("checkpoint_after_ticks",
                                                         updateReq_SettingsCheckpointAfterCheckpointAfterTicks),
                                                        ("checkpoint_after_ms",
                                                         updateReq_SettingsCheckpointAfterCheckpointAfterMs)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UpdateReq_ConsumerStrategy = UpdateReq_ConsumerStrategyDispatchToSingle
                                | UpdateReq_ConsumerStrategyRoundRobin
                                | UpdateReq_ConsumerStrategyPinned
                                deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UpdateReq_ConsumerStrategy where
        nameOf _ = (Hs.fromString "UpdateReq_ConsumerStrategy")
 
instance HsProtobuf.HasDefault UpdateReq_ConsumerStrategy
 
instance Hs.Bounded UpdateReq_ConsumerStrategy where
        minBound = UpdateReq_ConsumerStrategyDispatchToSingle
        maxBound = UpdateReq_ConsumerStrategyPinned
 
instance Hs.Ord UpdateReq_ConsumerStrategy where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum UpdateReq_ConsumerStrategy where
        toProtoEnumMay 0
          = Hs.Just UpdateReq_ConsumerStrategyDispatchToSingle
        toProtoEnumMay 1 = Hs.Just UpdateReq_ConsumerStrategyRoundRobin
        toProtoEnumMay 2 = Hs.Just UpdateReq_ConsumerStrategyPinned
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (UpdateReq_ConsumerStrategyDispatchToSingle) = 0
        fromProtoEnum (UpdateReq_ConsumerStrategyRoundRobin) = 1
        fromProtoEnum (UpdateReq_ConsumerStrategyPinned) = 2
 
instance HsJSONPB.ToJSONPB UpdateReq_ConsumerStrategy where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB UpdateReq_ConsumerStrategy where
        parseJSONPB (HsJSONPB.String "DispatchToSingle")
          = Hs.pure UpdateReq_ConsumerStrategyDispatchToSingle
        parseJSONPB (HsJSONPB.String "RoundRobin")
          = Hs.pure UpdateReq_ConsumerStrategyRoundRobin
        parseJSONPB (HsJSONPB.String "Pinned")
          = Hs.pure UpdateReq_ConsumerStrategyPinned
        parseJSONPB v
          = (HsJSONPB.typeMismatch "UpdateReq_ConsumerStrategy" v)
 
instance HsJSONPB.ToJSON UpdateReq_ConsumerStrategy where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON UpdateReq_ConsumerStrategy where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite UpdateReq_ConsumerStrategy
 
data UpdateResp = UpdateResp{}
                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UpdateResp where
        nameOf _ = (Hs.fromString "UpdateResp")
 
instance HsProtobuf.HasDefault UpdateResp
 
instance HsProtobuf.Message UpdateResp where
        encodeMessage _ UpdateResp{} = (Hs.mconcat [])
        decodeMessage _ = (Hs.pure UpdateResp)
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB UpdateResp where
        toJSONPB (UpdateResp) = (HsJSONPB.object [])
        toEncodingPB (UpdateResp) = (HsJSONPB.pairs [])
 
instance HsJSONPB.FromJSONPB UpdateResp where
        parseJSONPB
          = (HsJSONPB.withObject "UpdateResp"
               (\ obj -> (Hs.pure UpdateResp)))
 
instance HsJSONPB.ToJSON UpdateResp where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON UpdateResp where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema UpdateResp where
        declareNamedSchema _
          = do Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UpdateResp",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList []}})
 
newtype DeleteReq = DeleteReq{deleteReqOptions ::
                              Hs.Maybe Persistent.DeleteReq_Options}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named DeleteReq where
        nameOf _ = (Hs.fromString "DeleteReq")
 
instance HsProtobuf.HasDefault DeleteReq
 
instance HsProtobuf.Message DeleteReq where
        encodeMessage _ DeleteReq{deleteReqOptions = deleteReqOptions}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Persistent.DeleteReq_Options)
                      @(HsProtobuf.Nested Persistent.DeleteReq_Options)
                      deleteReqOptions))])
        decodeMessage _
          = (Hs.pure DeleteReq) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Persistent.DeleteReq_Options))
                 @(_ (Hs.Maybe Persistent.DeleteReq_Options))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Options")))
                (HsProtobuf.Single "options")
                []
                "")]
 
instance HsJSONPB.ToJSONPB DeleteReq where
        toJSONPB (DeleteReq f1) = (HsJSONPB.object ["options" .= f1])
        toEncodingPB (DeleteReq f1) = (HsJSONPB.pairs ["options" .= f1])
 
instance HsJSONPB.FromJSONPB DeleteReq where
        parseJSONPB
          = (HsJSONPB.withObject "DeleteReq"
               (\ obj -> (Hs.pure DeleteReq) <*> obj .: "options"))
 
instance HsJSONPB.ToJSON DeleteReq where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON DeleteReq where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema DeleteReq where
        declareNamedSchema _
          = do let declare_options = HsJSONPB.declareSchemaRef
               deleteReqOptions <- declare_options Proxy.Proxy
               let _ = Hs.pure DeleteReq <*> HsJSONPB.asProxy declare_options
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "DeleteReq",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("options", deleteReqOptions)]}})
 
data DeleteReq_Options = DeleteReq_Options{deleteReq_OptionsStreamIdentifier
                                           :: Hs.Maybe Shared.StreamIdentifier,
                                           deleteReq_OptionsGroupName :: Hs.Text}
                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named DeleteReq_Options where
        nameOf _ = (Hs.fromString "DeleteReq_Options")
 
instance HsProtobuf.HasDefault DeleteReq_Options
 
instance HsProtobuf.Message DeleteReq_Options where
        encodeMessage _
          DeleteReq_Options{deleteReq_OptionsStreamIdentifier =
                              deleteReq_OptionsStreamIdentifier,
                            deleteReq_OptionsGroupName = deleteReq_OptionsGroupName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Shared.StreamIdentifier)
                      @(HsProtobuf.Nested Shared.StreamIdentifier)
                      deleteReq_OptionsStreamIdentifier)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   deleteReq_OptionsGroupName)])
        decodeMessage _
          = (Hs.pure DeleteReq_Options) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Shared.StreamIdentifier))
                 @(_ (Hs.Maybe Shared.StreamIdentifier))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path
                            ("event_store" Hs.:| ["client", "shared", "StreamIdentifier"])))))
                (HsProtobuf.Single "stream_identifier")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "group_name")
                []
                "")]
 
instance HsJSONPB.ToJSONPB DeleteReq_Options where
        toJSONPB (DeleteReq_Options f1 f2)
          = (HsJSONPB.object ["stream_identifier" .= f1, "group_name" .= f2])
        toEncodingPB (DeleteReq_Options f1 f2)
          = (HsJSONPB.pairs ["stream_identifier" .= f1, "group_name" .= f2])
 
instance HsJSONPB.FromJSONPB DeleteReq_Options where
        parseJSONPB
          = (HsJSONPB.withObject "DeleteReq_Options"
               (\ obj ->
                  (Hs.pure DeleteReq_Options) <*> obj .: "stream_identifier" <*>
                    obj .: "group_name"))
 
instance HsJSONPB.ToJSON DeleteReq_Options where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON DeleteReq_Options where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema DeleteReq_Options where
        declareNamedSchema _
          = do let declare_stream_identifier = HsJSONPB.declareSchemaRef
               deleteReq_OptionsStreamIdentifier <- declare_stream_identifier
                                                      Proxy.Proxy
               let declare_group_name = HsJSONPB.declareSchemaRef
               deleteReq_OptionsGroupName <- declare_group_name Proxy.Proxy
               let _ = Hs.pure DeleteReq_Options <*>
                         HsJSONPB.asProxy declare_stream_identifier
                         <*> HsJSONPB.asProxy declare_group_name
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "DeleteReq_Options",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("stream_identifier",
                                                         deleteReq_OptionsStreamIdentifier),
                                                        ("group_name",
                                                         deleteReq_OptionsGroupName)]}})
 
data DeleteResp = DeleteResp{}
                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named DeleteResp where
        nameOf _ = (Hs.fromString "DeleteResp")
 
instance HsProtobuf.HasDefault DeleteResp
 
instance HsProtobuf.Message DeleteResp where
        encodeMessage _ DeleteResp{} = (Hs.mconcat [])
        decodeMessage _ = (Hs.pure DeleteResp)
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB DeleteResp where
        toJSONPB (DeleteResp) = (HsJSONPB.object [])
        toEncodingPB (DeleteResp) = (HsJSONPB.pairs [])
 
instance HsJSONPB.FromJSONPB DeleteResp where
        parseJSONPB
          = (HsJSONPB.withObject "DeleteResp"
               (\ obj -> (Hs.pure DeleteResp)))
 
instance HsJSONPB.ToJSON DeleteResp where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON DeleteResp where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema DeleteResp where
        declareNamedSchema _
          = do Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "DeleteResp",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList []}})